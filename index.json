{"repository_name":"crystalg","body":"[![GitHub release](https://img.shields.io/github/release/TobiasGSmollett/crystalg.svg)](https://github.com/TobiasGSmollett/crystalg/releases)\n\n\n\n# Crystalg\n\nA generic algorithm library for crystal-lang.\n\n## Installation\n\nClone repository manually:\n\n```sh\n$ git clone https://github.com/TobiasGSmollett/crystalg && cd crystalg/\n```\n\nOr add this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crystalg:\n    github: TobiasGSmollett/crystalg\n```\n\n## Usage\n\nThe fastest way to try it is by using Crystal Playground (`crystal play`):\n\n```crystal\nrequire \"./crystalg\"\n\ninclude Crystalg::Strings\n\ninput = \"mississippi\"\nhash = RollingHash.new input\nhash.count(\"issi\") # => 2\n```\n\n## Documentation\n- [API Document](https://tobiasgsmollett.github.io/crystalg/)\n\n## Development\n\ncrystal spec\n\n## To Do\n* Graph\n  * Minimum-Cost Arborescence\n  * Strongly Connected Components\n  * Flow Alogorithm\n    * Minimum Cost Flow\n* Data Structure\n  * Red Black Tree\n  * Link-Cut Tree\n* String Algorithm\n  * Suffix Automaton\n* Computational Geometry\n  * Closest Pair\n  * Segment Intersections\n  * Tangent to a Circle\n  * Common Tangent\n  * Intersection of a Circle and a Polygon\n\n## Contributing\n\n1. Fork it ( https://github.com/TobiasGSmollett/crystalg/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [TobiasGSmollett](https://github.com/TobiasGSmollett) tobias - creator, maintainer\n","program":{"html_id":"crystalg/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"crystalg","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"EPS","name":"EPS","value":"1e-8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg","path":"Crystalg.html","kind":"module","full_name":"Crystalg","name":"Crystalg","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg.cr#L6"},{"filename":"src/crystalg/data_structures.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures.cr#L1"},{"filename":"src/crystalg/version.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/version.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent","path":"Crystalg/Concurrent.html","kind":"module","full_name":"Crystalg::Concurrent","name":"Concurrent","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Core","path":"Crystalg/Concurrent/Core.html","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L5"},{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L3"},{"filename":"src/crystalg/concurrent/core/exchanger.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/exchanger.cr#L3"},{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Concurrent/Core/Exchanger","kind":"class","full_name":"Crystalg::Concurrent::Core::Exchanger(T)","name":"Exchanger"}],"namespace":{"html_id":"crystalg/Crystalg/Concurrent","kind":"module","full_name":"Crystalg::Concurrent","name":"Concurrent"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Core/AtomicMarkableReference","path":"Crystalg/Concurrent/Core/AtomicMarkableReference.html","kind":"class","full_name":"Crystalg::Concurrent::Core::AtomicMarkableReference(T)","name":"AtomicMarkableReference","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L6"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MASK","name":"MASK","value":"1_u64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(reference:T,mark=false)-class-method","html_id":"new(reference:T,mark=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":"T"},{"name":"mark","doc":null,"default_value":"false","external_name":"mark","restriction":""}],"args_string":"(reference : T, mark = <span class=\"n\">false</span>)","args_html":"(reference : T, mark = <span class=\"n\">false</span>)","location":{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L10"},"def":{"name":"new","args":[{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":"T"},{"name":"mark","doc":null,"default_value":"false","external_name":"mark","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AtomicMarkableReference(T).allocate\n_.initialize(reference, mark)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attempt_mark(expected_reference:T,new_mark:Bool):Bool-instance-method","html_id":"attempt_mark(expected_reference:T,new_mark:Bool):Bool-instance-method","name":"attempt_mark","doc":null,"summary":null,"abstract":false,"args":[{"name":"expected_reference","doc":null,"default_value":"","external_name":"expected_reference","restriction":"T"},{"name":"new_mark","doc":null,"default_value":"","external_name":"new_mark","restriction":"Bool"}],"args_string":"(expected_reference : T, new_mark : Bool) : Bool","args_html":"(expected_reference : T, new_mark : Bool) : Bool","location":{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":22,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L22"},"def":{"name":"attempt_mark","args":[{"name":"expected_reference","doc":null,"default_value":"","external_name":"expected_reference","restriction":"T"},{"name":"new_mark","doc":null,"default_value":"","external_name":"new_mark","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"_, is_succsess = compare_and_set(expected_reference, expected_reference, !new_mark, new_mark)\nis_succsess\n"}},{"id":"compare_and_set(expected_reference:T,new_reference:T,expected_mark:Bool,new_mark:Bool):Tuple(T,Bool)-instance-method","html_id":"compare_and_set(expected_reference:T,new_reference:T,expected_mark:Bool,new_mark:Bool):Tuple(T,Bool)-instance-method","name":"compare_and_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"expected_reference","doc":null,"default_value":"","external_name":"expected_reference","restriction":"T"},{"name":"new_reference","doc":null,"default_value":"","external_name":"new_reference","restriction":"T"},{"name":"expected_mark","doc":null,"default_value":"","external_name":"expected_mark","restriction":"Bool"},{"name":"new_mark","doc":null,"default_value":"","external_name":"new_mark","restriction":"Bool"}],"args_string":"(expected_reference : T, new_reference : T, expected_mark : Bool, new_mark : Bool) : Tuple(T, Bool)","args_html":"(expected_reference : T, new_reference : T, expected_mark : Bool, new_mark : Bool) : Tuple(T, Bool)","location":{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L14"},"def":{"name":"compare_and_set","args":[{"name":"expected_reference","doc":null,"default_value":"","external_name":"expected_reference","restriction":"T"},{"name":"new_reference","doc":null,"default_value":"","external_name":"new_reference","restriction":"T"},{"name":"expected_mark","doc":null,"default_value":"","external_name":"expected_mark","restriction":"Bool"},{"name":"new_mark","doc":null,"default_value":"","external_name":"new_mark","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(T, Bool)","visibility":"Public","body":"expected_value = pack(expected_reference, expected_mark)\nnew_value = pack(new_reference, new_mark)\n_, is_success = @word.compare_and_set(expected_value, new_value)\nif !is_success\n  return {nil, false}\nend\n{get(new_mark), true}\n"}},{"id":"get(marked:Bool):Tuple(T,Bool)-instance-method","html_id":"get(marked:Bool):Tuple(T,Bool)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"marked","doc":null,"default_value":"","external_name":"marked","restriction":"Bool"}],"args_string":"(marked : Bool) : Tuple(T, Bool)","args_html":"(marked : Bool) : Tuple(T, Bool)","location":{"filename":"src/crystalg/concurrent/core/atomic_markable_reference.cr","line_number":27,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_markable_reference.cr#L27"},"def":{"name":"get","args":[{"name":"marked","doc":null,"default_value":"","external_name":"marked","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(T, Bool)","visibility":"Public","body":"{(Pointer(T).new(@word & (~MASK))).value, (@word & MASK) == 1_u64}"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Core/AtomicStampedReference","path":"Crystalg/Concurrent/Core/AtomicStampedReference.html","kind":"class","full_name":"Crystalg::Concurrent::Core::AtomicStampedReference(T)","name":"AtomicStampedReference","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:T?,stamp:Int32)-class-method","html_id":"new(value:T?,stamp:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"stamp","doc":null,"default_value":"","external_name":"stamp","restriction":"Int32"}],"args_string":"(value : T?, stamp : Int32)","args_html":"(value : T?, stamp : Int32)","location":{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L16"},"def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T | ::Nil"},{"name":"stamp","doc":null,"default_value":"","external_name":"stamp","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AtomicStampedReference(T).allocate\n_.initialize(value, stamp)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"compare_and_set(expected_ref:T?,new_ref:T?,expected_stamp:Int,new_stamp:Int32)-instance-method","html_id":"compare_and_set(expected_ref:T?,new_ref:T?,expected_stamp:Int,new_stamp:Int32)-instance-method","name":"compare_and_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"expected_ref","doc":null,"default_value":"","external_name":"expected_ref","restriction":"T | ::Nil"},{"name":"new_ref","doc":null,"default_value":"","external_name":"new_ref","restriction":"T | ::Nil"},{"name":"expected_stamp","doc":null,"default_value":"","external_name":"expected_stamp","restriction":"Int"},{"name":"new_stamp","doc":null,"default_value":"","external_name":"new_stamp","restriction":"Int32"}],"args_string":"(expected_ref : T?, new_ref : T?, expected_stamp : Int, new_stamp : Int32)","args_html":"(expected_ref : T?, new_ref : T?, expected_stamp : Int, new_stamp : Int32)","location":{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L20"},"def":{"name":"compare_and_set","args":[{"name":"expected_ref","doc":null,"default_value":"","external_name":"expected_ref","restriction":"T | ::Nil"},{"name":"new_ref","doc":null,"default_value":"","external_name":"new_ref","restriction":"T | ::Nil"},{"name":"expected_stamp","doc":null,"default_value":"","external_name":"expected_stamp","restriction":"Int"},{"name":"new_stamp","doc":null,"default_value":"","external_name":"new_stamp","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"old_wrapped_ref = @ref.get\nold_ref, old_stamp = old_wrapped_ref.unwrap\nif (old_ref == expected_ref) && (old_stamp == expected_stamp)\n  new_wrapped_ref = A(T).new(new_ref, new_stamp)\n  result, is_success = @ref.compare_and_set(old_wrapped_ref, new_wrapped_ref)\n  if is_success\n    return result.unwrap\n  end\nend\nreturn {nil, false}\n"}},{"id":"get:Tuple(T?,Int32)-instance-method","html_id":"get:Tuple(T?,Int32)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Tuple(T?, Int32)","args_html":" : Tuple(T?, Int32)","location":{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L32"},"def":{"name":"get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(T | ::Nil, Int32)","visibility":"Public","body":"@ref.get.unwrap"}},{"id":"set(ref:T?,stamp:Int32)-instance-method","html_id":"set(ref:T?,stamp:Int32)-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"T | ::Nil"},{"name":"stamp","doc":null,"default_value":"","external_name":"stamp","restriction":"Int32"}],"args_string":"(ref : T?, stamp : Int32)","args_html":"(ref : T?, stamp : Int32)","location":{"filename":"src/crystalg/concurrent/core/atomic_stamped_reference.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/atomic_stamped_reference.cr#L36"},"def":{"name":"set","args":[{"name":"ref","doc":null,"default_value":"","external_name":"ref","restriction":"T | ::Nil"},{"name":"stamp","doc":null,"default_value":"","external_name":"stamp","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ref.set(A(T).new(ref, stamp))"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Core/Exchanger","path":"Crystalg/Concurrent/Core/Exchanger.html","kind":"class","full_name":"Crystalg::Concurrent::Core::Exchanger(T)","name":"Exchanger","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/core/exchanger.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/exchanger.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"BUSY","name":"BUSY","value":"2","doc":null,"summary":null},{"id":"EMPTY","name":"EMPTY","value":"0","doc":null,"summary":null},{"id":"WAITING","name":"WAITING","value":"1","doc":null,"summary":null}],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"exchange(my_item:T,timeout:Time::Span):T?-instance-method","html_id":"exchange(my_item:T,timeout:Time::Span):T?-instance-method","name":"exchange","doc":null,"summary":null,"abstract":false,"args":[{"name":"my_item","doc":null,"default_value":"","external_name":"my_item","restriction":"T"},{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":"Time::Span"}],"args_string":"(my_item : T, timeout : Time::Span) : T?","args_html":"(my_item : T, timeout : Time::Span) : T?","location":{"filename":"src/crystalg/concurrent/core/exchanger.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/exchanger.cr#L15"},"def":{"name":"exchange","args":[{"name":"my_item","doc":null,"default_value":"","external_name":"my_item","restriction":"T"},{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":"Time::Span"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"start_time = Time.now\nloop do\n  if timeout < (Time.now - start_time)\n    raise(\"timeout\")\n  end\n  yr_item, stamp = @slot.get\n  case stamp\n  when EMPTY\n    _, is_success = @slot.compare_and_set(yr_item, my_item, EMPTY, WAITING)\n    if is_success\n    else\n      next\n    end\n    while (Time.now - start_time) < timeout\n      yr_item, stamp = @slot.get\n      if stamp == BUSY\n        @slot.set(nil, EMPTY)\n        return yr_item\n      end\n    end\n    _, is_success = @slot.compare_and_set(my_item, nil, WAITING, EMPTY)\n    if is_success\n      raise(\"timeout\")\n    end\n    yr_item, stamp = @slot.get\n    @slot.set(nil, EMPTY)\n    return yr_item\n  when WAITING\n    yr_item, is_success = @slot.compare_and_set(yr_item, my_item, WAITING, BUSY)\n    if is_success\n      return yr_item\n    end\n  when BUSY\n    next\n  end\nend\n"}},{"id":"slot-instance-method","html_id":"slot-instance-method","name":"slot","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/core/exchanger.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/exchanger.cr#L11"},"def":{"name":"slot","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@slot"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Core/MarkableReference","path":"Crystalg/Concurrent/Core/MarkableReference.html","kind":"class","full_name":"Crystalg::Concurrent::Core::MarkableReference(T)","name":"MarkableReference","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"MASK","name":"MASK","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Core","kind":"module","full_name":"Crystalg::Concurrent::Core","name":"Core"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(reference:T,mark=false)-class-method","html_id":"new(reference:T,mark=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":"T"},{"name":"mark","doc":null,"default_value":"false","external_name":"mark","restriction":""}],"args_string":"(reference : T, mark = <span class=\"n\">false</span>)","args_html":"(reference : T, mark = <span class=\"n\">false</span>)","location":{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L6"},"def":{"name":"new","args":[{"name":"reference","doc":null,"default_value":"","external_name":"reference","restriction":"T"},{"name":"mark","doc":null,"default_value":"false","external_name":"mark","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = MarkableReference(T).allocate\n_.initialize(reference, mark)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"mark:Bool-instance-method","html_id":"mark:Bool-instance-method","name":"mark","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L15"},"def":{"name":"mark","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(@value & MASK) == 1"}},{"id":"reference:T-instance-method","html_id":"reference:T-instance-method","name":"reference","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/crystalg/concurrent/core/markable_reference.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/core/markable_reference.cr#L11"},"def":{"name":"reference","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(Pointer(T).new(@value & (~MASK))).value"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Concurrent/DataStructure","path":"Crystalg/Concurrent/DataStructure.html","kind":"module","full_name":"Crystalg::Concurrent::DataStructure","name":"DataStructure","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L1"},{"filename":"src/crystalg/concurrent/data_structure/unbounded_queue.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/unbounded_queue.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent","kind":"module","full_name":"Crystalg::Concurrent","name":"Concurrent"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/DataStructure/Node","path":"Crystalg/Concurrent/DataStructure/Node.html","kind":"class","full_name":"Crystalg::Concurrent::DataStructure::Node(T)","name":"Node","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/DataStructure","kind":"module","full_name":"Crystalg::Concurrent::DataStructure","name":"DataStructure"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value=nil)-class-method","html_id":"new(value=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"args_string":"(value = <span class=\"n\">nil</span>)","args_html":"(value = <span class=\"n\">nil</span>)","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L6"},"def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Node(T).allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next:Atomic(Node(T)?)-instance-method","html_id":"next:Atomic(Node(T)?)-instance-method","name":"next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Atomic(Node(T)?)","args_html":" : Atomic(<a href=\"../../../Crystalg/Concurrent/DataStructure/Node.html\">Node</a>(T)?)","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L4"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Atomic(Node(T) | ::Nil)","visibility":"Public","body":"@next"}},{"id":"next=(next__arg0:Atomic(Node(T)?))-instance-method","html_id":"next=(next__arg0:Atomic(Node(T)?))-instance-method","name":"next=","doc":null,"summary":null,"abstract":false,"args":[{"name":"__arg0","doc":null,"default_value":"","external_name":"next","restriction":"Atomic(Node(T) | ::Nil)"}],"args_string":"(next __arg0 : Atomic(Node(T)?))","args_html":"(next __arg0 : Atomic(<a href=\"../../../Crystalg/Concurrent/DataStructure/Node.html\">Node</a>(T)?))","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L4"},"def":{"name":"next=","args":[{"name":"__arg0","doc":null,"default_value":"","external_name":"next","restriction":"Atomic(Node(T) | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@next = __arg0"}},{"id":"value:T?-instance-method","html_id":"value:T?-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L3"},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/DataStructure/Queue","path":"Crystalg/Concurrent/DataStructure/Queue.html","kind":"class","full_name":"Crystalg::Concurrent::DataStructure::Queue(T)","name":"Queue","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L11"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/DataStructure","kind":"module","full_name":"Crystalg::Concurrent::DataStructure","name":"DataStructure"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L15"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Queue(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dequeue:T?-instance-method","html_id":"dequeue:T?-instance-method","name":"dequeue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L37"},"def":{"name":"dequeue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"loop do\n  first = @head.get\n  last = @tail.get\n  nxt = first.next.get\n  if first != @head.get\n    next\n  end\n  if first == last\n    if nxt.nil?\n      raise(EmptyException.new)\n    end\n    @tail.compare_and_set(last, nxt)\n  else\n    nxt = nxt.as(Node(T))\n    value = nxt.value\n    if @head.compare_and_set(first, nxt)\n      return value\n    end\n  end\nend"}},{"id":"enqueue(value:T)-instance-method","html_id":"enqueue(value:T)-instance-method","name":"enqueue","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/crystalg/concurrent/data_structure/queue.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/queue.cr#L19"},"def":{"name":"enqueue","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = Node(T).new(value)\nloop do\n  last = @tail.get\n  nxt = last.next.get\n  if last != @tail.get\n    next\n  end\n  if nxt.nil?\n    _, is_success = last.next.compare_and_set(nxt, node)\n    if is_success\n      @tail.compare_and_set(last, node)\n      return\n    end\n  else\n    @tail.compare_and_set(last, nxt)\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/DataStructure/UnboundedQueue","path":"Crystalg/Concurrent/DataStructure/UnboundedQueue.html","kind":"class","full_name":"Crystalg::Concurrent::DataStructure::UnboundedQueue(T)","name":"UnboundedQueue","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/data_structure/unbounded_queue.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/unbounded_queue.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/DataStructure","kind":"module","full_name":"Crystalg::Concurrent::DataStructure","name":"DataStructure"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/data_structure/unbounded_queue.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/unbounded_queue.cr#L19"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UnboundedQueue(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dequeue:T?-instance-method","html_id":"dequeue:T?-instance-method","name":"dequeue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/concurrent/data_structure/unbounded_queue.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/unbounded_queue.cr#L36"},"def":{"name":"dequeue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@dequeue_mutex.lock\nresult = nil\nbegin\n  nxt = @head.next\n  if nxt.nil?\n    raise(EmptyException.new)\n  end\n  result = nxt.value\n  @head = @head.next.as(Node(T))\nensure\n  @dequeue_mutex.unlock\nend\nresult\n"}},{"id":"enqueue(value:T)-instance-method","html_id":"enqueue(value:T)-instance-method","name":"enqueue","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/crystalg/concurrent/data_structure/unbounded_queue.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/data_structure/unbounded_queue.cr#L25"},"def":{"name":"enqueue","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@enqueue_mutex.lock\nbegin\n  e = Node(T).new(value)\n  @tail.next = e\n  @tail = e\nensure\n  @enqueue_mutex.unlock\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Concurrent/Lock","path":"Crystalg/Concurrent/Lock.html","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/concurrent/lock/a_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/a_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/back_off.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/back_off.cr#L1"},{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/lock.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/lock.cr#L1"},{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/reentrant_lock.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/reentrant_lock.cr#L3"},{"filename":"src/crystalg/concurrent/lock/semaphore.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/semaphore.cr#L14"},{"filename":"src/crystalg/concurrent/lock/tas_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/tas_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/ttas_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/ttas_lock.cr#L4"},{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent","kind":"module","full_name":"Crystalg::Concurrent","name":"Concurrent"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/ALock","path":"Crystalg/Concurrent/Lock/ALock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::ALock","name":"ALock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/a_lock.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/a_lock.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crystalg/concurrent/lock/a_lock.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/a_lock.cr#L14"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/a_lock.cr","line_number":21,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/a_lock.cr#L21"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"slot = (@tail.add(1)) % @size\n@my_slot_index = slot\nloop do\n  if @flat[slot]\n    break\n  end\nend\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/a_lock.cr","line_number":27,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/a_lock.cr#L27"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"slot = @my_slot_index\n@flag[slot] = false\n@flag[(slot + 1) % @size] = true\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/BackOff","path":"Crystalg/Concurrent/Lock/BackOff.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::BackOff","name":"BackOff","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/back_off.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/back_off.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(min_delay,max_delay)-class-method","html_id":"new(min_delay,max_delay)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"min_delay","doc":null,"default_value":"","external_name":"min_delay","restriction":""},{"name":"max_delay","doc":null,"default_value":"","external_name":"max_delay","restriction":""}],"args_string":"(min_delay, max_delay)","args_html":"(min_delay, max_delay)","location":{"filename":"src/crystalg/concurrent/lock/back_off.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/back_off.cr#L7"},"def":{"name":"new","args":[{"name":"min_delay","doc":null,"default_value":"","external_name":"min_delay","restriction":""},{"name":"max_delay","doc":null,"default_value":"","external_name":"max_delay","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(min_delay, max_delay)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"back_off-instance-method","html_id":"back_off-instance-method","name":"back_off","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/back_off.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/back_off.cr#L12"},"def":{"name":"back_off","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"delay = @random.rand(@limit)\n@limit = Math.min(@max_delay, 2 * @limit)\nsleep(delay.milliseconds)\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/CLHLock","path":"Crystalg/Concurrent/Lock/CLHLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::CLHLock","name":"CLHLock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":22,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L22"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L28"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qnode = @my_node\nqnode.locked = true\npred = @tail.swap(qnode)\n@my_pred = pred\nloop do\n  if !pred.locked\n    break\n  end\nend\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L36"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"my_pred = @my_pred\nif my_pred.nil?\n  raise(\"Attempt to unlock a mutex which is not locked\")\nend\nqnode = @my_node\nqnode.locked = false\n@my_node = my_pred\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/CLHLock/QNode","path":"Crystalg/Concurrent/Lock/CLHLock/QNode.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::CLHLock::QNode","name":"QNode","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L8"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock/CLHLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::CLHLock","name":"CLHLock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L11"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"locked:Bool-instance-method","html_id":"locked:Bool-instance-method","name":"locked","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L9"},"def":{"name":"locked","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@locked"}},{"id":"locked=(locked)-instance-method","html_id":"locked=(locked)-instance-method","name":"locked=","doc":null,"summary":null,"abstract":false,"args":[{"name":"locked","doc":null,"default_value":"","external_name":"locked","restriction":""}],"args_string":"(locked)","args_html":"(locked)","location":{"filename":"src/crystalg/concurrent/lock/clh_lock.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/clh_lock.cr#L9"},"def":{"name":"locked=","args":[{"name":"locked","doc":null,"default_value":"","external_name":"locked","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@locked = locked"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","path":"Crystalg/Concurrent/Lock/Lock.html","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/concurrent/lock/lock.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/lock.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/ALock","kind":"class","full_name":"Crystalg::Concurrent::Lock::ALock","name":"ALock"},{"html_id":"crystalg/Crystalg/Concurrent/Lock/CLHLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::CLHLock","name":"CLHLock"},{"html_id":"crystalg/Crystalg/Concurrent/Lock/MCSLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::MCSLock","name":"MCSLock"},{"html_id":"crystalg/Crystalg/Concurrent/Lock/ReentrantLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::ReentrantLock","name":"ReentrantLock"},{"html_id":"crystalg/Crystalg/Concurrent/Lock/TASLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::TASLock","name":"TASLock"},{"html_id":"crystalg/Crystalg/Concurrent/Lock/TTASLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::TTASLock","name":"TTASLock"}],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/lock.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/lock.cr#L3"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/lock.cr#L4"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/MCSLock","path":"Crystalg/Concurrent/Lock/MCSLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::MCSLock","name":"MCSLock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L24"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":29,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L29"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qnode = @my_node\npred = @tail.swap(qnode)\nif pred.nil?\n  return\nend\nqnode.locked.set(1)\npred.nxt = qnode\nloop do\n  if !qnode.locked\n    break\n  end\nend\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L38"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qnode = @my_node\nif qnode.nxt.nil?\n  _, is_success = @tail.compare_and_set(qnode, nil)\n  if is_success\n    return\n  end\n  loop do\n    if !qnode.nxt.nil?\n      break\n    end\n  end\nend\nnxt = qnode.nxt\nif !nxt.nil?\n  nxt.locked.set(0)\nend\nqnode.nxt = nil\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/MCSLock/QNode","path":"Crystalg/Concurrent/Lock/MCSLock/QNode.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::MCSLock::QNode","name":"QNode","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L12"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock/MCSLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::MCSLock","name":"MCSLock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L18"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"locked:Atomic(Int8)-instance-method","html_id":"locked:Atomic(Int8)-instance-method","name":"locked","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Atomic(Int8)","args_html":" : Atomic(Int8)","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L13"},"def":{"name":"locked","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@locked"}},{"id":"locked=(locked)-instance-method","html_id":"locked=(locked)-instance-method","name":"locked=","doc":null,"summary":null,"abstract":false,"args":[{"name":"locked","doc":null,"default_value":"","external_name":"locked","restriction":""}],"args_string":"(locked)","args_html":"(locked)","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L13"},"def":{"name":"locked=","args":[{"name":"locked","doc":null,"default_value":"","external_name":"locked","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@locked = locked"}},{"id":"nxt:Crystalg::Concurrent::Lock::MCSLock::QNode?-instance-method","html_id":"nxt:Crystalg::Concurrent::Lock::MCSLock::QNode?-instance-method","name":"nxt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crystalg::Concurrent::Lock::MCSLock::QNode?","args_html":" : <a href=\"../../../../Crystalg/Concurrent/Lock/MCSLock/QNode.html\">Crystalg::Concurrent::Lock::MCSLock::QNode</a>?","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L13"},"def":{"name":"nxt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nxt"}},{"id":"nxt=(nxt)-instance-method","html_id":"nxt=(nxt)-instance-method","name":"nxt=","doc":null,"summary":null,"abstract":false,"args":[{"name":"nxt","doc":null,"default_value":"","external_name":"nxt","restriction":""}],"args_string":"(nxt)","args_html":"(nxt)","location":{"filename":"src/crystalg/concurrent/lock/mcs_lock.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/mcs_lock.cr#L13"},"def":{"name":"nxt=","args":[{"name":"nxt","doc":null,"default_value":"","external_name":"nxt","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nxt = nxt"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/ReentrantLock","path":"Crystalg/Concurrent/Lock/ReentrantLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::ReentrantLock","name":"ReentrantLock","abstract":false,"superclass":{"html_id":"crystalg/Thread/Mutex","kind":"class","full_name":"Thread::Mutex","name":"Mutex"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Thread/Mutex","kind":"class","full_name":"Thread::Mutex","name":"Mutex"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/reentrant_lock.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/reentrant_lock.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(lock=Thread::Mutex.new)-class-method","html_id":"new(lock=Thread::Mutex.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"lock","doc":null,"default_value":"Thread::Mutex.new","external_name":"lock","restriction":""}],"args_string":"(lock = <span class=\"t\">Thread</span><span class=\"t\">::</span><span class=\"t\">Mutex</span>.<span class=\"k\">new</span>)","args_html":"(lock = <span class=\"t\">Thread</span><span class=\"t\">::</span><span class=\"t\">Mutex</span>.<span class=\"k\">new</span>)","location":{"filename":"src/crystalg/concurrent/lock/reentrant_lock.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/reentrant_lock.cr#L12"},"def":{"name":"new","args":[{"name":"lock","doc":null,"default_value":"Thread::Mutex.new","external_name":"lock","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lock)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/reentrant_lock.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/reentrant_lock.cr#L18"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"me = Fiber.current.hash\n@lock.lock\nbegin\n  if @owner == me\n    @hold_count = @hold_count + 1\n    return\n  end\n  while @hold_count != 0\n    @condition.wait(@lock)\n  end\n  @owner = me\n  @hold_count = 1\nensure\n  @lock.unlock\nend\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/reentrant_lock.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/reentrant_lock.cr#L36"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@lock.lock\nbegin\n  if (@hold_count == 0) || (@owner != Fiber.current.hash)\n    raise(\"illegal monitor state\")\n  end\n  @hold_count = @hold_count - 1\n  if @hold_count == 0\n    @condition.signal\n  end\nensure\n  @lock.unlock\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/Semaphore","path":"Crystalg/Concurrent/Lock/Semaphore.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::Semaphore","name":"Semaphore","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/semaphore.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/semaphore.cr#L15"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(capacity)-class-method","html_id":"new(capacity)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""}],"args_string":"(capacity)","args_html":"(capacity)","location":{"filename":"src/crystalg/concurrent/lock/semaphore.cr","line_number":21,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/semaphore.cr#L21"},"def":{"name":"new","args":[{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(capacity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"acquire-instance-method","html_id":"acquire-instance-method","name":"acquire","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/semaphore.cr","line_number":27,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/semaphore.cr#L27"},"def":{"name":"acquire","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mutex.lock\nbegin\n  while @state == @capacity\n    @condition.wait(@mutex)\n  end\n  @state = @state + 1\nensure\n  @mutex.unlock\nend\n"}},{"id":"release-instance-method","html_id":"release-instance-method","name":"release","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/semaphore.cr","line_number":39,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/semaphore.cr#L39"},"def":{"name":"release","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mutex.lock\nbegin\n  @state = @state - 1\n  @condition.broadcast\nensure\n  @mutex.unlock\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/TASLock","path":"Crystalg/Concurrent/Lock/TASLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::TASLock","name":"TASLock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/tas_lock.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/tas_lock.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/tas_lock.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/tas_lock.cr#L10"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/tas_lock.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/tas_lock.cr#L14"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  if (@state.swap(1)) == 0\n    break\n  end\nend"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/tas_lock.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/tas_lock.cr#L18"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@state.set(0)"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/TOLock","path":"Crystalg/Concurrent/Lock/TOLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::TOLock","name":"TOLock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L6"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"AVAILABLE","name":"AVAILABLE","value":"QNode.new","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":"TimeOut Lock","summary":"<p>TimeOut Lock</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L20"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L25"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qnode = QNode.new\n@my_node = qnode\nmy_pred = @tail.swap(qnode)\nif my_pred.nil? || (my_pred.pred == AVAILABLE)\n  return true\nend\nloop do\n  pred_pred = my_pred.pred\n  if pred_pred == AVAILABLE\n    return\n  end\n  if pred_pred.nil?\n  else\n    my_pred = pred_pred\n  end\nend\n"}},{"id":"try_lock(patience:Time::Span)-instance-method","html_id":"try_lock(patience:Time::Span)-instance-method","name":"try_lock","doc":null,"summary":null,"abstract":false,"args":[{"name":"patience","doc":null,"default_value":"","external_name":"patience","restriction":"Time::Span"}],"args_string":"(patience : Time::Span)","args_html":"(patience : Time::Span)","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":43,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L43"},"def":{"name":"try_lock","args":[{"name":"patience","doc":null,"default_value":"","external_name":"patience","restriction":"Time::Span"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start_time = Time.now\nqnode = QNode.new\n@my_node = qnode\nmy_pred = @tail.swap(qnode)\nif my_pred.nil? || (my_pred.pred == AVAILABLE)\n  return true\nend\nwhile (Time.now - start_time) < patience\n  pred_pred = my_pred.pred\n  if pred_pred == AVAILABLE\n    return true\n  end\n  if !pred_pred.nil?\n    my_pred = pred_pred\n  end\nend\n_, is_success = @tail.compare_and_set(qnode, my_pred)\nif !is_success\n  qnode.pred = my_pred\nend\nfalse\n"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L37"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qnode = @my_node\n_, is_success = @tail.compare_and_set(qnode, nil)\nif !is_success\n  qnode.pred = AVAILABLE\nend\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/TOLock/QNode","path":"Crystalg/Concurrent/Lock/TOLock/QNode.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::TOLock::QNode","name":"QNode","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L7"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock/TOLock","kind":"class","full_name":"Crystalg::Concurrent::Lock::TOLock","name":"TOLock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L10"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"pred:QNode?-instance-method","html_id":"pred:QNode?-instance-method","name":"pred","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : QNode?","args_html":" : <a href=\"../../../../Crystalg/Concurrent/Lock/TOLock/QNode.html\">QNode</a>?","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L8"},"def":{"name":"pred","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"QNode | ::Nil","visibility":"Public","body":"@pred"}},{"id":"pred=(pred:QNode?)-instance-method","html_id":"pred=(pred:QNode?)-instance-method","name":"pred=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pred","doc":null,"default_value":"","external_name":"pred","restriction":"QNode | ::Nil"}],"args_string":"(pred : QNode?)","args_html":"(pred : <a href=\"../../../../Crystalg/Concurrent/Lock/TOLock/QNode.html\">QNode</a>?)","location":{"filename":"src/crystalg/concurrent/lock/to_lock.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/to_lock.cr#L8"},"def":{"name":"pred=","args":[{"name":"pred","doc":null,"default_value":"","external_name":"pred","restriction":"QNode | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pred = pred"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/TTASLock","path":"Crystalg/Concurrent/Lock/TTASLock.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::TTASLock","name":"TTASLock","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/ttas_lock.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/ttas_lock.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Concurrent/Lock/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock::Lock","name":"Lock"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/ttas_lock.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/ttas_lock.cr#L10"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/ttas_lock.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/ttas_lock.cr#L14"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  loop do\n    if @state.get == 0\n      break\n    end\n  end\n  if (@state.swap(1)) == 0\n    return\n  end\nend"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/ttas_lock.cr","line_number":21,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/ttas_lock.cr#L21"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@state.set(0)"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Concurrent/Lock/WaitGroup","path":"Crystalg/Concurrent/Lock/WaitGroup.html","kind":"class","full_name":"Crystalg::Concurrent::Lock::WaitGroup","name":"WaitGroup","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Concurrent/Lock","kind":"module","full_name":"Crystalg::Concurrent::Lock","name":"Lock"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L8"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(delta:Int32)-instance-method","html_id":"add(delta:Int32)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"args_string":"(delta : Int32)","args_html":"(delta : Int32)","location":{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L12"},"def":{"name":"add","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  _, is_success = @counter.add(delta)\n  if is_success\n    break\n  end\nend"}},{"id":"done-instance-method","html_id":"done-instance-method","name":"done","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L19"},"def":{"name":"done","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(-1)"}},{"id":"wait-instance-method","html_id":"wait-instance-method","name":"wait","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/concurrent/lock/wait_group.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/concurrent/lock/wait_group.cr#L23"},"def":{"name":"wait","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"back_off = BackOff.new(1, 5)\nwhile @counter.get != 0\n  back_off.back_off\nend\n"}}],"macros":[],"types":[]}]}]},{"html_id":"crystalg/Crystalg/DataStructures","path":"Crystalg/DataStructures.html","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/data_structures.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures.cr#L1"},{"filename":"src/crystalg/data_structures/fenwick_tree.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree.cr#L1"},{"filename":"src/crystalg/data_structures/fenwick_tree_2d.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree_2d.cr#L1"},{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L3"},{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L1"},{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L1"},{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L1"},{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L1"},{"filename":"src/crystalg/data_structures/queue.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L1"},{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L1"},{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L1"},{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L1"},{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L1"},{"filename":"src/crystalg/data_structures/skip_list.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skip_list.cr#L3"},{"filename":"src/crystalg/data_structures/stack.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L1"},{"filename":"src/crystalg/data_structures/union_find.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/DataStructures/FenwickTree","path":"Crystalg/DataStructures/FenwickTree.html","kind":"class","full_name":"Crystalg::DataStructures::FenwickTree(T)","name":"FenwickTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/fenwick_tree.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree.cr#L19"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"Fenwick Tree can efficiently update elements and calculate prefix sums\nin a table of numbers. Type argument `T` must be the Group.\n\n```\nfenwick = FenwickTree(Int32).new(5)\n\nfenwick[0] = 1\nfenwick[1] = 3\nfenwick[2] = 5\nfenwick[3] = 7\nfenwick[4] = 11\n\n# sum method returns sum of [0, index). If given index is 0, returns 0.\nfenwick.sum(0) # => 0\nfenwick.sum(3) # => 9\nfenwick.sum(5) # => 27\n```","summary":"<p>Fenwick Tree can efficiently update elements and calculate prefix sums in a table of numbers.</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":"Creates FenwickTree(T).","summary":"<p>Creates FenwickTree(T).</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crystalg/data_structures/fenwick_tree.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree.cr#L23"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FenwickTree(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[]=(index:Int,value:T)-instance-method","html_id":"[]=(index:Int,value:T)-instance-method","name":"[]=","doc":"Sets the given value at the given index. `O(log n)`.","summary":"<p>Sets the given value at the given index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int, value : T)","args_html":"(index : Int, value : T)","location":{"filename":"src/crystalg/data_structures/fenwick_tree.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree.cr#L28"},"def":{"name":"[]=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = index + 1\nwhile key <= @size\n  __temp_24 = key\n  @data[__temp_24] = @data[__temp_24] + value\n  key = key + (key & (-key))\nend\n"}},{"id":"sum(index:Int)-instance-method","html_id":"sum(index:Int)-instance-method","name":"sum","doc":"Adds elements that index less than or equeals `key` in the collection together. `O(log n)`.","summary":"<p>Adds elements that index less than or equeals <code>key</code> in the collection together.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","args_html":"(index : Int)","location":{"filename":"src/crystalg/data_structures/fenwick_tree.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree.cr#L37"},"def":{"name":"sum","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = T.zero\nwhile index > T.zero\n  result = result + @data[index]\n  index = index - (index & (-index))\nend\nresult\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/FenwickTree2D","path":"Crystalg/DataStructures/FenwickTree2D.html","kind":"class","full_name":"Crystalg::DataStructures::FenwickTree2D(T)","name":"FenwickTree2D","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/fenwick_tree_2d.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree_2d.cr#L38"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"FenwickTree2D is FenwickTree extended 2D.\n\n```\nfenwick = FenwickTree2D(Int32).new(4, 3)\n\n# Create following grid:\n#  1  2  3\n#  4  5  6\n#  7  8  9\n# 10 11 12\n\nfenwick[0, 0] = 1\nfenwick[1, 0] = 2\nfenwick[2, 0] = 3\nfenwick[0, 1] = 4\nfenwick[1, 1] = 5\nfenwick[2, 1] = 6\nfenwick[0, 2] = 7\nfenwick[1, 2] = 8\nfenwick[2, 2] = 9\nfenwick[0, 3] = 10\nfenwick[1, 3] = 11\nfenwick[2, 3] = 12\n\n# Sum of the above grid is:\n# 0   0   0   0\n# 0   1   3   6\n# 0   5  12  21\n# 0  12  27  45\n# 0  22  48  78\n\nfenwick.sum(0, 0) # => 0\nfenwick.sum(2, 0) # => 0\nfenwick.sum(2, 3) # => 27\nfenwick.sum(2, 4) # => 48\n```","summary":"<p>FenwickTree2D is FenwickTree extended 2D.</p>","class_methods":[],"constructors":[{"id":"new(height,width)-class-method","html_id":"new(height,width)-class-method","name":"new","doc":"Creates FenwickTree2D(T).","summary":"<p>Creates FenwickTree2D(T).</p>","abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"args_string":"(height, width)","args_html":"(height, width)","location":{"filename":"src/crystalg/data_structures/fenwick_tree_2d.cr","line_number":43,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree_2d.cr#L43"},"def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FenwickTree2D(T).allocate\n_.initialize(height, width)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[]=(row,col,value)-instance-method","html_id":"[]=(row,col,value)-instance-method","name":"[]=","doc":"Sets the given value at the given row and column. `O(log^2 n)`.","summary":"<p>Sets the given value at the given row and column.</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"","external_name":"col","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(row, col, value)","args_html":"(row, col, value)","location":{"filename":"src/crystalg/data_structures/fenwick_tree_2d.cr","line_number":50,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree_2d.cr#L50"},"def":{"name":"[]=","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"","external_name":"col","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"row = row + 1\nwhile row <= @height\n  @data[row][col] = value\n  row = row + (row & (-row))\nend\n"}},{"id":"sum(row,col)-instance-method","html_id":"sum(row,col)-instance-method","name":"sum","doc":"Adds elements in a square surrounded [0, row) and [0, col). `O(log^2 n)`.","summary":"<p>Adds elements in a square surrounded [0, row) and [0, col).</p>","abstract":false,"args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"","external_name":"col","restriction":""}],"args_string":"(row, col)","args_html":"(row, col)","location":{"filename":"src/crystalg/data_structures/fenwick_tree_2d.cr","line_number":59,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/fenwick_tree_2d.cr#L59"},"def":{"name":"sum","args":[{"name":"row","doc":null,"default_value":"","external_name":"row","restriction":""},{"name":"col","doc":null,"default_value":"","external_name":"col","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = T.zero\nwhile row > T.zero\n  result = result + (@data[row].sum(col))\n  row = row - (row & (-row))\nend\nresult\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/KDTree","path":"Crystalg/DataStructures/KDTree.html","kind":"class","full_name":"Crystalg::DataStructures::KDTree(T)","name":"KDTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L7"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"KD Tree is a data structure for organizing points in a k-dimensional space.\nKD Trees are a useful data structure for several applications,\nsuch as range searches and nearest neighbor searches.","summary":"<p>KD Tree is a data structure for organizing points in a k-dimensional space.</p>","class_methods":[],"constructors":[{"id":"new(points)-class-method","html_id":"new(points)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":""}],"args_string":"(points)","args_html":"(points)","location":{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L13"},"def":{"name":"new","args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = KDTree(T).allocate\n_.initialize(points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"build(left,right,divx)-instance-method","html_id":"build(left,right,divx)-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""},{"name":"divx","doc":null,"default_value":"","external_name":"divx","restriction":""}],"args_string":"(left, right, divx)","args_html":"(left, right, divx)","location":{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L25"},"def":{"name":"build","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""},{"name":"divx","doc":null,"default_value":"","external_name":"divx","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if left >= right\n  return\nend\nmiddle = ((left + right) / 2).to_i\nsort(left, right, divx)\n@tx[middle], @ty[middle] = @points[middle].x, @points[middle].y\n@count[middle] = right - left\n@minx[middle], @miny[middle] = T::MAX, T::MAX\n@maxx[middle], @maxy[middle] = T::MIN, T::MIN\n(left...right).each do |i|\n  @minx[middle] = Math.min(@minx[middle], @points[i].x)\n  @miny[middle] = Math.min(@miny[middle], @points[i].y)\n  @maxx[middle] = Math.max(@maxx[middle], @points[i].x)\n  @maxy[middle] = Math.max(@maxy[middle], @points[i].y)\nend\nbuild(left, middle, !divx)\nbuild(middle + 1, right, !divx)\n"}},{"id":"count(bottom_left,top_right)-instance-method","html_id":"count(bottom_left,top_right)-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[{"name":"bottom_left","doc":null,"default_value":"","external_name":"bottom_left","restriction":""},{"name":"top_right","doc":null,"default_value":"","external_name":"top_right","restriction":""}],"args_string":"(bottom_left, top_right)","args_html":"(bottom_left, top_right)","location":{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":83,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L83"},"def":{"name":"count","args":[{"name":"bottom_left","doc":null,"default_value":"","external_name":"bottom_left","restriction":""},{"name":"top_right","doc":null,"default_value":"","external_name":"top_right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"count(0, @tx.size, bottom_left, top_right)"}},{"id":"nearest_neighbour(target)-instance-method","html_id":"nearest_neighbour(target)-instance-method","name":"nearest_neighbour","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"args_string":"(target)","args_html":"(target)","location":{"filename":"src/crystalg/data_structures/kdtree.cr","line_number":107,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/kdtree.cr#L107"},"def":{"name":"nearest_neighbour","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = nearest_neighbour(0, @points.size, target, true, {T::MAX, -1})\n@points[result[1]]\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/LeftistHeap","path":"Crystalg/DataStructures/LeftistHeap.html","kind":"class","full_name":"Crystalg::DataStructures::LeftistHeap(T)","name":"LeftistHeap","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A leftist heap is a priority queue allowed merging heaps.","summary":"<p>A leftist heap is a priority queue allowed merging heaps.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"absorb(other:LeftistHeap(T))-instance-method","html_id":"absorb(other:LeftistHeap(T))-instance-method","name":"absorb","doc":"Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q. `O(log n)`.\n\n```\nheap1 = LeftistHeap(Int32).new\nheap2 = LeftistHeap(Int32).new\n[1, 2, 3].each { |e| heap1.push(e) }\n[4, 5, 6].each { |e| heap2.push(e) }\n\nheap1.absorb(heap2)\n\nheap2.top # => nil\n\nheap1.top     # => 1\nheap1.pop.top # => 2\nheap1.pop.top # => 3\nheap1.pop.top # => 4\nheap1.pop.top # => 5\nheap1.pop.top # => 6\nheap1.pop.top # => nil\n```","summary":"<p>Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"LeftistHeap(T)"}],"args_string":"(other : LeftistHeap(T))","args_html":"(other : <a href=\"../../Crystalg/DataStructures/LeftistHeap.html\">LeftistHeap</a>(T))","location":{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":100,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L100"},"def":{"name":"absorb","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"LeftistHeap(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = meld(@root, other.@root)\nother.root = nil\nself\n"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":"Pops the highest priority value from heap. `O(log n)`.\n\n```\nheap = LeftistHeap(Int32).new\n\nheap.push(3).push(2).push(1)\nheap.pop\nheap.top # => 2\n```","summary":"<p>Pops the highest priority value from heap.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":72,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L72"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @root.nil?\n  return\nend\nroot = @root.as(Node(T))\n@root = meld(root.left, root.right)\nself\n"}},{"id":"push(x:T)-instance-method","html_id":"push(x:T)-instance-method","name":"push","doc":"Pushes a new value to heap. `O(log n)`\n\n```\nheap = LeftistHeap(Int32).new\nheap.push(2)\nheap.top # => 2\n```","summary":"<p>Pushes a new value to heap.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","args_html":"(x : T)","location":{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":40,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L40"},"def":{"name":"push","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = if @root.nil?\n  Node(T).new(x)\nelse\n  meld(@root.as(Node(T)), Node(T).new(x))\nend\nself\n"}},{"id":"top:T?-instance-method","html_id":"top:T?-instance-method","name":"top","doc":"Returns the higheset priority value or nil if heap is empty. `O(1)`.\n\n```\nheap = LeftistHeap(Int32).new\n\nheap.top         # => nil\nheap.push(1).top # => 1\n```","summary":"<p>Returns the higheset priority value or nil if heap is empty.</p>","abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/data_structures/leftist_heap.cr","line_number":59,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/leftist_heap.cr#L59"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@root.try(&.value)"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/LinkCutTree","path":"Crystalg/DataStructures/LinkCutTree.html","kind":"class","full_name":"Crystalg::DataStructures::LinkCutTree(T)","name":"LinkCutTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":"<p><span class=\"flag lime\">EXPERIMENTAL</span>  </p>\n\n","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L4"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LinkCutTree(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(from:NodeID,to:NodeID,v:Int32)-instance-method","html_id":"add(from:NodeID,to:NodeID,v:Int32)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"NodeID"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"args_string":"(from : NodeID, to : NodeID, v : Int32)","args_html":"(from : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, to : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, v : Int32)","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":186,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L186"},"def":{"name":"add","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"NodeID"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"evert(from)\nexpose(to)\n__temp_40 = to\n@lazy[__temp_40] = @lazy[__temp_40] + v\n"}},{"id":"add(id:NodeID,val:Int32)-instance-method","html_id":"add(id:NodeID,val:Int32)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"args_string":"(id : NodeID, val : Int32)","args_html":"(id : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, val : Int32)","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":181,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L181"},"def":{"name":"add","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expose(id)\n@lazy[id] = val\n"}},{"id":"connected?(x:NodeID,y:NodeID)-instance-method","html_id":"connected?(x:NodeID,y:NodeID)-instance-method","name":"connected?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"args_string":"(x : NodeID, y : NodeID)","args_html":"(x : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, y : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":143,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L143"},"def":{"name":"connected?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expose(x)\nexpose(y)\n!@parent[x].nil?\n"}},{"id":"cut(id:NodeID):Nil-instance-method","html_id":"cut(id:NodeID):Nil-instance-method","name":"cut","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"args_string":"(id : NodeID) : Nil","args_html":"(id : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Nil","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":159,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L159"},"def":{"name":"cut","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"expose(id)\n@parent[@right[id].as(Int32)] = nil\n@right[id] = nil\n"}},{"id":"evert(par:NodeID):Nil-instance-method","html_id":"evert(par:NodeID):Nil-instance-method","name":"evert","doc":null,"summary":null,"abstract":false,"args":[{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"args_string":"(par : NodeID) : Nil","args_html":"(par : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Nil","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":149,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L149"},"def":{"name":"evert","args":[{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"expose(par)\n__temp_38 = par\n@rev[__temp_38] = @rev[__temp_38] ^ true\n"}},{"id":"find_root(id:NodeID):NodeID-instance-method","html_id":"find_root(id:NodeID):NodeID-instance-method","name":"find_root","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"args_string":"(id : NodeID) : NodeID","args_html":"(id : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":135,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L135"},"def":{"name":"find_root","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NodeID","visibility":"Public","body":"expose(id)\nwhile !@right[id].nil?\n  id = @right[id]\nend\nid\n"}},{"id":"lca(ch:NodeID,par:NodeID):NodeID?-instance-method","html_id":"lca(ch:NodeID,par:NodeID):NodeID?-instance-method","name":"lca","doc":null,"summary":null,"abstract":false,"args":[{"name":"ch","doc":null,"default_value":"","external_name":"ch","restriction":"NodeID"},{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"args_string":"(ch : NodeID, par : NodeID) : NodeID?","args_html":"(ch : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, par : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>?","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":165,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L165"},"def":{"name":"lca","args":[{"name":"ch","doc":null,"default_value":"","external_name":"ch","restriction":"NodeID"},{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NodeID | ::Nil","visibility":"Public","body":"expose(ch)\nexpose(par)\n"}},{"id":"link(ch:NodeID,par:NodeID):Nil-instance-method","html_id":"link(ch:NodeID,par:NodeID):Nil-instance-method","name":"link","doc":null,"summary":null,"abstract":false,"args":[{"name":"ch","doc":null,"default_value":"","external_name":"ch","restriction":"NodeID"},{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"args_string":"(ch : NodeID, par : NodeID) : Nil","args_html":"(ch : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, par : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Nil","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":154,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L154"},"def":{"name":"link","args":[{"name":"ch","doc":null,"default_value":"","external_name":"ch","restriction":"NodeID"},{"name":"par","doc":null,"default_value":"","external_name":"par","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"evert(ch)\n@parent[ch] = par\n"}},{"id":"min(from:NodeID,to:NodeID):Int32-instance-method","html_id":"min(from:NodeID,to:NodeID):Int32-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"NodeID"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"NodeID"}],"args_string":"(from : NodeID, to : NodeID) : Int32","args_html":"(from : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, to : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Int32","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":175,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L175"},"def":{"name":"min","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"NodeID"},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"evert(from)\nexpose(to)\n@mini[to]\n"}},{"id":"min_id(id:NodeID):Int32-instance-method","html_id":"min_id(id:NodeID):Int32-instance-method","name":"min_id","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"args_string":"(id : NodeID) : Int32","args_html":"(id : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Int32","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":170,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L170"},"def":{"name":"min_id","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"expose(id)\n@minId[id]\n"}},{"id":"root?(id:NodeID)-instance-method","html_id":"root?(id:NodeID)-instance-method","name":"root?","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"args_string":"(id : NodeID)","args_html":"(id : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/data_structures/link_cut_tree.cr","line_number":62,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/link_cut_tree.cr#L62"},"def":{"name":"root?","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parent_index = @parent[id]\nif parent_index.nil?\n  return true\nend\nis_left = (@left[parent_index] != id)\nis_right = (@right[parent_index] != id)\nis_left && is_right\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/NodeID","path":"Crystalg/DataStructures/NodeID.html","kind":"alias","full_name":"Crystalg::DataStructures::NodeID","name":"NodeID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/data_structures.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":true,"aliased":"Int32","aliased_html":"Int32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/PersistentUnionFind","path":"Crystalg/DataStructures/PersistentUnionFind.html","kind":"class","full_name":"Crystalg::DataStructures::PersistentUnionFind","name":"PersistentUnionFind","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L3"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"root(u:NodeID,time:Int32):NodeID-instance-method","html_id":"root(u:NodeID,time:Int32):NodeID-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"args_string":"(u : NodeID, time : Int32) : NodeID","args_html":"(u : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, time : Int32) : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>","location":{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":22,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L22"},"def":{"name":"root","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NodeID","visibility":"Public","body":"parent_id, parent_time = @parent[u].last\nif parent_id >= 0 && parent_time <= time\n  return root(parent_id, time)\nend\nu\n"}},{"id":"same?(u:NodeID,v:NodeID,time:Int32):Bool-instance-method","html_id":"same?(u:NodeID,v:NodeID,time:Int32):Bool-instance-method","name":"same?","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"args_string":"(u : NodeID, v : NodeID, time : Int32) : Bool","args_html":"(u : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, v : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, time : Int32) : Bool","location":{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L18"},"def":{"name":"same?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(root(u, time)) == (root(v, time))"}},{"id":"size(u:NodeID,time:Int32):Int32-instance-method","html_id":"size(u:NodeID,time:Int32):Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"args_string":"(u : NodeID, time : Int32) : Int32","args_html":"(u : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, time : Int32) : Int32","location":{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L28"},"def":{"name":"size","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"u = root(u, time)\nleft, right = 0, @parent[u].size\nwhile (right - left) > 1\n  middle = (left + right) / 2\n  if @parent[u][middle].last <= time\n    left = middle\n  else\n    right = middle\n  end\nend\n-@parent[u][left].first\n"}},{"id":"unite(u:NodeID,v:NodeID):Bool-instance-method","html_id":"unite(u:NodeID,v:NodeID):Bool-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"}],"args_string":"(u : NodeID, v : NodeID) : Bool","args_html":"(u : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, v : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>) : Bool","location":{"filename":"src/crystalg/data_structures/persistent_union_find.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/persistent_union_find.cr#L8"},"def":{"name":"unite","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"NodeID"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@current = @current + 1\nu, v = root(u, @current), root(v, @current)\nif u == v\n  return false\nend\nif @parent[u].last.first > @parent[v].last.first\n  u, v = v, u\nend\n@parent[u] << {@parent[u].last.first + @parent[v].last.first, @current}\n@parent[v] << {u, @current}\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/PriorityQueue","path":"Crystalg/DataStructures/PriorityQueue.html","kind":"class","full_name":"Crystalg::DataStructures::PriorityQueue(A)","name":"PriorityQueue","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L20"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A PriorityQueue is a queue ordered by priority of elements.\n\n```\nmin_heap = PriorityQueue(Int32).new\n[10, 8, 2, 11].each { |e| min_heap.push(e) }\nmin_heap.top     # => 2\nmin_heap.pop.top # => 8\n\nmin_heap.pop! # => 8\nmin_heap.top  # => 10\n\nmax_heap = PriorityQueue(Int32).new(:max)\n[10, 8, 2, 11].each { |e| max_heap.push(e) }\nmax_heap.pop! # => 11\nmax_heap.pop! # => 10\nmax_heap.pop! # => 8\nmax_heap.pop! # => 2\n```","summary":"<p>A PriorityQueue is a queue ordered by priority of elements.</p>","class_methods":[],"constructors":[{"id":"new(order=:min)-class-method","html_id":"new(order=:min)-class-method","name":"new","doc":"Creates a new `PriorityQueue`. The `order` parameter must be `:min` or `:max`.\n\n```\nqueue = PriorityQueue(Int32).new\nqueue = PriorityQueue(Int32).new(:min)\nqueue = PriorityQueue(Int32).new(:max)\n```","summary":"<p>Creates a new <code><a href=\"../../Crystalg/DataStructures/PriorityQueue.html\">PriorityQueue</a></code>.</p>","abstract":false,"args":[{"name":"order","doc":null,"default_value":":min","external_name":"order","restriction":""}],"args_string":"(order = <span class=\"n\">:min</span>)","args_html":"(order = <span class=\"n\">:min</span>)","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":30,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L30"},"def":{"name":"new","args":[{"name":"order","doc":null,"default_value":":min","external_name":"order","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PriorityQueue(A).allocate\n_.initialize(order)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Returns true if PriorityQueue is empty.","summary":"<p>Returns true if PriorityQueue is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":87,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L87"},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@size == 0"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":"Removes the highest priority value based on `order` property. This method returns self, so several calls can be chained.","summary":"<p>Removes the highest priority value based on <code>order</code> property.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":53,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L53"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = @size - 1\nx = @heap[@size]\npos = 0\nloop do\n  child = (2 * pos) + 1\n  if @size <= child\n    break\n  end\n  if (((@order == (:min)) && child < @size) && @heap[child + 1] < @heap[child]) || (((@order == (:max)) && child < @size) && @heap[child] < @heap[child + 1])\n    child = child + 1\n  end\n  if (@order == (:min)) && x <= @heap[child]\n    break\n  end\n  if (@order == (:max)) && @heap[child] <= x\n    break\n  end\n  @heap[pos] = @heap[child]\n  pos = child\nend\n@heap[pos] = x\nself\n"}},{"id":"pop!:A?-instance-method","html_id":"pop!:A?-instance-method","name":"pop!","doc":"Removes the highest priority value based on `order` property and returns the removed value. Returns nil if PriorityQueue is empty.","summary":"<p>Removes the highest priority value based on <code>order</code> property and returns the removed value.</p>","abstract":false,"args":[],"args_string":" : A?","args_html":" : A?","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":74,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L74"},"def":{"name":"pop!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"A | ::Nil","visibility":"Public","body":"if empty?\n  return\nend\nresult = top\npop\nresult\n"}},{"id":"push(val:A)-instance-method","html_id":"push(val:A)-instance-method","name":"push","doc":"Append. This method returns self, so several calls can be chained.","summary":"<p>Append.</p>","abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"A"}],"args_string":"(val : A)","args_html":"(val : A)","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L37"},"def":{"name":"push","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"A"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@heap << val\ni = @size\n@size = @size + 1\nwhile 0 < i\n  parent = ((i - 1) / 2).to_i\n  if (@order == (:min)) && @heap[parent] <= val\n    break\n  end\n  if (@order == (:max)) && val <= @heap[parent]\n    break\n  end\n  @heap[i] = @heap[parent]\n  i = parent\nend\n@heap[i] = val\nself\n"}},{"id":"size:UInt32-instance-method","html_id":"size:UInt32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":21,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L21"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@size"}},{"id":"top:A?-instance-method","html_id":"top:A?-instance-method","name":"top","doc":"Returns the highest priority value without removing the value. Returns nil if PriorityQueue is empty.","summary":"<p>Returns the highest priority value without removing the value.</p>","abstract":false,"args":[],"args_string":" : A?","args_html":" : A?","location":{"filename":"src/crystalg/data_structures/priority_queue.cr","line_number":82,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/priority_queue.cr#L82"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"A | ::Nil","visibility":"Public","body":"@heap.first?"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/Queue","path":"Crystalg/DataStructures/Queue.html","kind":"class","full_name":"Crystalg::DataStructures::Queue(T)","name":"Queue","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/queue.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L13"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A queue is a first-in-first-out data structure. In a FIFO data structure,\nthe first element added to the queue will be the first one to be removed.\n\n```\nqueue = Queue(Int32).new\nqueue.push(1).push(2).push(3)\n\nputs queue.pop! # => 1\nputs queue.pop! # => 2\nputs queue.pop! # => 3\n```","summary":"<p>A queue is a first-in-first-out data structure.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L14"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Queue(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L38"},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array.empty?"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L23"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array.shift?\nself\n"}},{"id":"pop!:T?-instance-method","html_id":"pop!:T?-instance-method","name":"pop!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L28"},"def":{"name":"pop!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"result = @array.first?\n@array.shift?\nresult\n"}},{"id":"push(val:T)-instance-method","html_id":"push(val:T)-instance-method","name":"push","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(val : T)","args_html":"(val : T)","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L18"},"def":{"name":"push","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array << val\nself\n"}},{"id":"top:T?-instance-method","html_id":"top:T?-instance-method","name":"top","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/data_structures/queue.cr","line_number":34,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/queue.cr#L34"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@array.first?"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/RandomizedBinarySearchTree","path":"Crystalg/DataStructures/RandomizedBinarySearchTree.html","kind":"class","full_name":"Crystalg::DataStructures::RandomizedBinarySearchTree(T)","name":"RandomizedBinarySearchTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":29,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L29"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A randomized binary serach tree is  a binary tree selected\nat random from some probability distribution on binary trees.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\n\ntree.insert(0, 1)\ntree.insert(1, 2)\ntree.insert(2, 3)\ntree.insert(3, 4)\ntree.insert(4, 5) # => [1, 2, 3, 4, 5]\n\n# splits to [0, index) and [index, n)\nleft, right = tree.split(3) # left => [1, 2, 3], right => [4, 5]\n\nright.merge(left) # => [4, 5, 1, 2, 3]\n\n# reverses [left_index, right_index)\nright.reverse(1, 4) # => [4, 2, 1, 5, 3]\n\nright.erase(2) # => [4, 2, 5, 3]\n\nright.find(0) # => 4\nright.find(1) # => 2\nright.find(2) # => 5\nright.find(3) # => 3\n```","summary":"<p>A randomized binary serach tree is  a binary tree selected at random from some probability distribution on binary trees.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Creates a empty tree.","summary":"<p>Creates a empty tree.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":55,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L55"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = RandomizedBinarySearchTree(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"erase(index:Int32)-instance-method","html_id":"erase(index:Int32)-instance-method","name":"erase","doc":"Erases a value by O(log n). This method returns self, so several calls can be chained.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\ntree.insert(0, 1)\n\ntree.erase(0)\n```","summary":"<p>Erases a value by O(log n).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32)","args_html":"(index : Int32)","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":185,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L185"},"def":{"name":"erase","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = find_rec(index, @root)\nif node.nil? || (node.key != index)\n  return self\nend\ntmp, c = split_rec(index + 1, @root)\na, b = split_rec(index, tmp)\n@root = merge_rec(a, c)\nif !@root.nil?\n  @root = push(@root.as(Node(T)))\nend\nself\n"}},{"id":"find(index:Int32):T?-instance-method","html_id":"find(index:Int32):T?-instance-method","name":"find","doc":"Returns a value by O(log n).\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\ntree.insert(0, 1)\n\ntree.find(0) # => 1\n```","summary":"<p>Returns a value by O(log n).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : T?","args_html":"(index : Int32) : T?","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":237,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L237"},"def":{"name":"find","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"result = find_rec(index, @root)\nif result.nil?\n  return nil\nend\nresult.value\n"}},{"id":"insert(index:Int32,value:T)-instance-method","html_id":"insert(index:Int32,value:T)-instance-method","name":"insert","doc":"Inserts a value by O(log n). This method returns self, so several calls can be chained.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\ntree.insert(0, 1)\n```","summary":"<p>Inserts a value by O(log n).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int32, value : T)","args_html":"(index : Int32, value : T)","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":166,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L166"},"def":{"name":"insert","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = find_rec(index, @root)\nif (!node.nil?) && (node.key == index)\n  return self\nend\nleft, right = split_rec(index)\nt = merge_rec(left, Node.new(index, value))\nt = merge_rec(t, right)\n@root = t.nil? ? t : push(t)\nself\n"}},{"id":"merge(other:RandomizedBinarySearchTree(T))-instance-method","html_id":"merge(other:RandomizedBinarySearchTree(T))-instance-method","name":"merge","doc":"Merges two trees by O(log n). This method returns self, so several calls can be chained.\n\n```\nleft = RandomizedBinarySearchTree(Int32).new\nright = RandomizedBinarySearchTree(Int32).new\n\n[4, 5].each_with_index { |e, i| left.insert(i, e) }\n[1, 2, 3].each_with_index { |e, i| right.insert(i, e) }\n\nleft.merge(right)\n\nright.find(0) # => 4\nright.find(1) # => 5\nleft.find(2)  # => 1\nleft.find(3)  # => 2\nleft.find(4)  # => 3\n```","summary":"<p>Merges two trees by O(log n).</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"RandomizedBinarySearchTree(T)"}],"args_string":"(other : RandomizedBinarySearchTree(T))","args_html":"(other : <a href=\"../../Crystalg/DataStructures/RandomizedBinarySearchTree.html\">RandomizedBinarySearchTree</a>(T))","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":114,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L114"},"def":{"name":"merge","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"RandomizedBinarySearchTree(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = merge_rec(@root, other.@root)\nother.root = nil\nself\n"}},{"id":"reverse(left_id:Int32,right_id:Int32)-instance-method","html_id":"reverse(left_id:Int32,right_id:Int32)-instance-method","name":"reverse","doc":"Reverses values in [left_id, right_id) by O(log n). This method returns self, so several calls can be chained.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\n\n[1, 2, 3, 4, 5].each_with_index { |e, i| tree.insert(i, e) }\n\ntree.reverse(1, 4)\n\ntree.find(0) # => 1\ntree.find(1) # => 4\ntree.find(2) # => 3\ntree.find(3) # => 2\ntree.find(4) # => 5\n```","summary":"<p>Reverses values in [left_id, right_id) by O(log n).</p>","abstract":false,"args":[{"name":"left_id","doc":null,"default_value":"","external_name":"left_id","restriction":"Int32"},{"name":"right_id","doc":null,"default_value":"","external_name":"right_id","restriction":"Int32"}],"args_string":"(left_id : Int32, right_id : Int32)","args_html":"(left_id : Int32, right_id : Int32)","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":258,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L258"},"def":{"name":"reverse","args":[{"name":"left_id","doc":null,"default_value":"","external_name":"left_id","restriction":"Int32"},{"name":"right_id","doc":null,"default_value":"","external_name":"right_id","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tmp, c = split_rec(right_id)\na, b = split_rec(left_id, tmp)\nif !b.nil?\n  __temp_44 = b.as(Node(T))\n  __temp_44.rev = __temp_44.rev ^ true\nend\nmerge_rec(merge_rec(a, b), c)\nself\n"}},{"id":"split(index:Int32)-instance-method","html_id":"split(index:Int32)-instance-method","name":"split","doc":"Splits a tree to [0, index) and [index, n) by O(log n).\nAfter this method called, a receiver tree is empty.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\n\n[1, 2, 3, 4, 5].each_with_index { |e, i| tree.insert(i, e) }\n\nleft, right = tree.split(3)\n\nleft.find(0)  # => 1\nleft.find(1)  # => 2\nleft.find(2)  # => 3\nright.find(0) # => 4\nright.find(1) # => 5\n```","summary":"<p>Splits a tree to [0, index) and [index, n) by O(log n).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32)","args_html":"(index : Int32)","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":152,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L152"},"def":{"name":"split","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"left_root, right_root = split_rec(index, @root)\nleft = RandomizedBinarySearchTree(T).new(left_root)\nright = RandomizedBinarySearchTree(T).new(right_root)\n@root = nil\n{left, right}\n"}},{"id":"update(index:Int32,value:T)-instance-method","html_id":"update(index:Int32,value:T)-instance-method","name":"update","doc":"Updates a value by O(log n). This method returns self, so several calls can be chained.\n\n```\ntree = RandomizedBinarySearchTree(Int32).new\ntree.insert(0, 1)\n\ntree.update(0, 2)\n```","summary":"<p>Updates a value by O(log n).</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(index : Int32, value : T)","args_html":"(index : Int32, value : T)","location":{"filename":"src/crystalg/data_structures/randomized_binary_search_tree.cr","line_number":204,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_binary_search_tree.cr#L204"},"def":{"name":"update","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = find_rec(index, @root)\nif node.nil? || (node.key != index)\n  return self\nend\ntmp, c = split_rec(index + 1, @root)\na, b = split_rec(index, tmp)\n@root = merge_rec(merge_rec(a, Node(T).new(index, value)), c)\nif !@root.nil?\n  @root = push(@root.as(Node(T)))\nend\nself\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/RandomizedMeldableHeap","path":"Crystalg/DataStructures/RandomizedMeldableHeap.html","kind":"class","full_name":"Crystalg::DataStructures::RandomizedMeldableHeap(T)","name":"RandomizedMeldableHeap","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A randomized meldable heap is a priority queue allowed merging heaps\nby supporting internal method called meld.","summary":"<p>A randomized meldable heap is a priority queue allowed merging heaps by supporting internal method called meld.</p>","class_methods":[],"constructors":[{"id":"new(order=:min,seed:UInt64=123456789)-class-method","html_id":"new(order=:min,seed:UInt64=123456789)-class-method","name":"new","doc":"Creates a new `RandomizedMeldableHeap(T)`. The `order` parameter must be `:min` or `:max`.","summary":"<p>Creates a new <code><a href=\"../../Crystalg/DataStructures/RandomizedMeldableHeap.html\">RandomizedMeldableHeap</a>(T)</code>.</p>","abstract":false,"args":[{"name":"order","doc":null,"default_value":":min","external_name":"order","restriction":""},{"name":"seed","doc":null,"default_value":"123456789","external_name":"seed","restriction":"UInt64"}],"args_string":"(order = <span class=\"n\">:min</span>, seed : UInt64 = <span class=\"n\">123456789</span>)","args_html":"(order = <span class=\"n\">:min</span>, seed : UInt64 = <span class=\"n\">123456789</span>)","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":22,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L22"},"def":{"name":"new","args":[{"name":"order","doc":null,"default_value":":min","external_name":"order","restriction":""},{"name":"seed","doc":null,"default_value":"123456789","external_name":"seed","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = RandomizedMeldableHeap(T).allocate\n_.initialize(order, seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"absorb(other:RandomizedMeldableHeap(T))-instance-method","html_id":"absorb(other:RandomizedMeldableHeap(T))-instance-method","name":"absorb","doc":"Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q. `O(log n)`.\n\n```\nheap1 = RandomizedMeldableHeap(Int32).new\nheap2 = RandomizedMeldableHeap(Int32).new\n[1, 2, 3].each { |e| heap1.push(e) }\n[4, 5, 6].each { |e| heap2.push(e) }\n\nheap1.absorb(heap2)\n\nheap2.top # => nil\n\nheap1.top     # => 1\nheap1.pop.top # => 2\nheap1.pop.top # => 3\nheap1.pop.top # => 4\nheap1.pop.top # => 5\nheap1.pop.top # => 6\nheap1.pop.top # => nil\n```","summary":"<p>Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"RandomizedMeldableHeap(T)"}],"args_string":"(other : RandomizedMeldableHeap(T))","args_html":"(other : <a href=\"../../Crystalg/DataStructures/RandomizedMeldableHeap.html\">RandomizedMeldableHeap</a>(T))","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":152,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L152"},"def":{"name":"absorb","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"RandomizedMeldableHeap(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = meld(@root, other.root)\nother.root = nil\nself\n"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":"Pops the highest priority value from heap. `O(log n)`.\n\n```\nheap = RandomizedMeldableHeap(Int32).new\n\nheap.push(3).push(2).push(1)\nheap.pop\nheap.top # => 2\n```","summary":"<p>Pops the highest priority value from heap.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":80,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L80"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @root.nil?\n  return\nend\n@root = meld((@root.as(Node(T))).left, (@root.as(Node(T))).right)\n@size = @size - 1\nself\n"}},{"id":"push(value:T)-instance-method","html_id":"push(value:T)-instance-method","name":"push","doc":"Pushes a new value to heap. `O(log n)`\n\n```\nheap = RandomizedMeldableHeap(Int32).new\nheap.push(2)\nheap.top # => 2\n```","summary":"<p>Pushes a new value to heap.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":63,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L63"},"def":{"name":"push","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = meld(Node(T).new(value), @root)\nif @root.nil?\n  return\nend\n@size = @size + 1\nself\n"}},{"id":"remove(value:T)-instance-method","html_id":"remove(value:T)-instance-method","name":"remove","doc":"Removes all values equal a parameter from heap. `O(k log n)`. `k` is number of removed elements.\n\n```\nheap = RandomizedMeldableHeap(Int32).new\n\n[10, 1, 2, 2, 2, 11, 2].each { |e| heap.push(e) }\n\nheap.remove(2)\n\nheap.top     # => 1\nheap.pop.top # => 10\nheap.pop.top # => 11\nheap.pop.top # => nil\n```","summary":"<p>Removes all values equal a parameter from heap.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(value : T)","args_html":"(value : T)","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":127,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L127"},"def":{"name":"remove","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = remove_rec(@root, value)\nself\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns number of elements in a heap. 0 if a heap is empty. `O(1)`.\n\n```\nheap = RandomizedMeldableHeap(Int32).new\n\nheap.size         # => 0\nheap.push(1).size # => 1\n```","summary":"<p>Returns number of elements in a heap.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":52,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L52"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"top-instance-method","html_id":"top-instance-method","name":"top","doc":"Returns the higheset priority value or nil if heap is empty. `O(1)`.\n\n```\nheap = RandomizedMeldableHeap(Int32).new\n\nheap.top         # => nil\nheap.push(1).top # => 1\n```","summary":"<p>Returns the higheset priority value or nil if heap is empty.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/randomized_meldable_heap.cr","line_number":96,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/randomized_meldable_heap.cr#L96"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !@root.nil?\n  (@root.as(Node(T))).value\nend"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/SegmetTree","path":"Crystalg/DataStructures/SegmetTree.html","kind":"class","full_name":"Crystalg::DataStructures::SegmetTree(T)","name":"SegmetTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L5"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SegmetTree(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(a,b,v)-instance-method","html_id":"add(a,b,v)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(a, b, v)","args_html":"(a, b, v)","location":{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":54,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L54"},"def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(a, b, v, 0, 0, @size)"}},{"id":"min(a,b)-instance-method","html_id":"min(a,b)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":58,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L58"},"def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"min(a, b, 0, 0, @size)"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/data_structures/segment_tree.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/segment_tree.cr#L3"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/SkewHeap","path":"Crystalg/DataStructures/SkewHeap.html","kind":"class","full_name":"Crystalg::DataStructures::SkewHeap(T)","name":"SkewHeap","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A skew heap is a priority queue allowed merging heaps.","summary":"<p>A skew heap is a priority queue allowed merging heaps.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"absorb(other:SkewHeap(T))-instance-method","html_id":"absorb(other:SkewHeap(T))-instance-method","name":"absorb","doc":"Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q. `O(log n)`.\n\n```\nheap1 = SkewHeap(Int32).new\nheap2 = SkewHeap(Int32).new\n[1, 2, 3].each { |e| heap1.push(e) }\n[4, 5, 6].each { |e| heap2.push(e) }\n\nheap1.absorb(heap2)\n\nheap2.top # => nil\n\nheap1.top     # => 1\nheap1.pop.top # => 2\nheap1.pop.top # => 3\nheap1.pop.top # => 4\nheap1.pop.top # => 5\nheap1.pop.top # => 6\nheap1.pop.top # => nil\n```","summary":"<p>Adds all elements of the meldable heap Q passed as parameter to this heap, and then emptying Q.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"SkewHeap(T)"}],"args_string":"(other : SkewHeap(T))","args_html":"(other : <a href=\"../../Crystalg/DataStructures/SkewHeap.html\">SkewHeap</a>(T))","location":{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":95,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L95"},"def":{"name":"absorb","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"SkewHeap(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = meld(@root, other.@root)\nother.root = nil\nself\n"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":"Pops the highest priority value from heap. `O(log n)`.\n\n```\nheap = SkewHeap(Int32).new\n\nheap.push(3).push(2).push(1)\nheap.pop\nheap.top # => 2\n```","summary":"<p>Pops the highest priority value from heap.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":67,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L67"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @root.nil?\n  return self\nend\ntmp = @root.as(Node(T))\n@root = meld(tmp.left, tmp.right)\nself\n"}},{"id":"push(x)-instance-method","html_id":"push(x)-instance-method","name":"push","doc":"Pushes a new value to heap. `O(log n)`\n\n```\nheap = SkewHeap(Int32).new\nheap.push(2)\nheap.top # => 2\n```","summary":"<p>Pushes a new value to heap.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","args_html":"(x)","location":{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":35,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L35"},"def":{"name":"push","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root = if @root.nil?\n  Node(T).new(x)\nelse\n  meld(@root.as(Node(T)), Node(T).new(x))\nend\nself\n"}},{"id":"top-instance-method","html_id":"top-instance-method","name":"top","doc":"Returns the higheset priority value or nil if heap is empty. `O(1)`.\n\n```\nheap = SkewHeap(Int32).new\n\nheap.top         # => nil\nheap.push(1).top # => 1\n```","summary":"<p>Returns the higheset priority value or nil if heap is empty.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/skew_heap.cr","line_number":54,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skew_heap.cr#L54"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@root.try(&.value)"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/SkipList","path":"Crystalg/DataStructures/SkipList.html","kind":"class","full_name":"Crystalg::DataStructures::SkipList","name":"SkipList","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/skip_list.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skip_list.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(max_level:Int32,seed:UInt64=123456789)-class-method","html_id":"new(max_level:Int32,seed:UInt64=123456789)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_level","doc":null,"default_value":"","external_name":"max_level","restriction":"Int32"},{"name":"seed","doc":null,"default_value":"123456789","external_name":"seed","restriction":"UInt64"}],"args_string":"(max_level : Int32, seed : UInt64 = <span class=\"n\">123456789</span>)","args_html":"(max_level : Int32, seed : UInt64 = <span class=\"n\">123456789</span>)","location":{"filename":"src/crystalg/data_structures/skip_list.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skip_list.cr#L24"},"def":{"name":"new","args":[{"name":"max_level","doc":null,"default_value":"","external_name":"max_level","restriction":"Int32"},{"name":"seed","doc":null,"default_value":"123456789","external_name":"seed","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(max_level, seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"includes?(value:Int32)-instance-method","html_id":"includes?(value:Int32)-instance-method","name":"includes?","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : Int32)","location":{"filename":"src/crystalg/data_structures/skip_list.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skip_list.cr#L36"},"def":{"name":"includes?","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == (upper_bound(value, @max_level).@value)"}},{"id":"insert(value:Int32)-instance-method","html_id":"insert(value:Int32)-instance-method","name":"insert","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","args_html":"(value : Int32)","location":{"filename":"src/crystalg/data_structures/skip_list.cr","line_number":40,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/skip_list.cr#L40"},"def":{"name":"insert","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"level = generate_level\ncurrent = upper_bound(value, level)\nloop do\n  if current.level <= level\n    current.insert_to_right(Node.new(value, current.level))\n  end\n  if current.level == 0\n    return\n  end\n  current.down = Node.new(value, current.level - 1)\n  current = current.down.as(Node)\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/Stack","path":"Crystalg/DataStructures/Stack.html","kind":"class","full_name":"Crystalg::DataStructures::Stack(T)","name":"Stack","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/stack.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L13"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":"A stack is a first-in-last-out data structure. In a FILO data structure,\nthe first element added to the queue will be the last one to be removed.\n\n```\nstack = Stack(Int32).new\nstack.push(1).push(2).push(3)\n\nputs stack.pop! # => 3\nputs stack.pop! # => 2\nputs stack.pop! # => 1\n```","summary":"<p>A stack is a first-in-last-out data structure.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L14"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Stack(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"empty?-instance-method","html_id":"empty?-instance-method","name":"empty?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L38"},"def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array.empty?"}},{"id":"pop-instance-method","html_id":"pop-instance-method","name":"pop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L23"},"def":{"name":"pop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array.pop?\nself\n"}},{"id":"pop!:T?-instance-method","html_id":"pop!:T?-instance-method","name":"pop!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L28"},"def":{"name":"pop!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"result = @array.last?\n@array.pop?\nresult\n"}},{"id":"push(val:T)-instance-method","html_id":"push(val:T)-instance-method","name":"push","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(val : T)","args_html":"(val : T)","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":18,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L18"},"def":{"name":"push","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@array << val\nself\n"}},{"id":"top:T?-instance-method","html_id":"top:T?-instance-method","name":"top","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T?","args_html":" : T?","location":{"filename":"src/crystalg/data_structures/stack.cr","line_number":34,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/stack.cr#L34"},"def":{"name":"top","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@array.last?"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/DataStructures/UnionFind","path":"Crystalg/DataStructures/UnionFind.html","kind":"class","full_name":"Crystalg::DataStructures::UnionFind","name":"UnionFind","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/data_structures/union_find.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/DataStructures","kind":"module","full_name":"Crystalg::DataStructures","name":"DataStructures"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","args_html":"(size)","location":{"filename":"src/crystalg/data_structures/union_find.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L5"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"same?(x:NodeID,y:NodeID)-instance-method","html_id":"same?(x:NodeID,y:NodeID)-instance-method","name":"same?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"args_string":"(x : NodeID, y : NodeID)","args_html":"(x : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, y : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/data_structures/union_find.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L19"},"def":{"name":"same?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(root(x)) == (root(y))"}},{"id":"size(x:NodeID)-instance-method","html_id":"size(x:NodeID)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"}],"args_string":"(x : NodeID)","args_html":"(x : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/data_structures/union_find.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L23"},"def":{"name":"size","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data[root(x)].abs"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/data_structures/union_find.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L3"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"unite(x:NodeID,y:NodeID)-instance-method","html_id":"unite(x:NodeID,y:NodeID)-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"args_string":"(x : NodeID, y : NodeID)","args_html":"(x : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>, y : <a href=\"../../Crystalg/DataStructures/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/data_structures/union_find.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/data_structures/union_find.cr#L9"},"def":{"name":"unite","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"NodeID"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = root(x)\ny = root(y)\nif x != y\n  if @data[y] < @data[x]\n    x, y = y, x\n  end\n  __temp_51 = x\n  @data[__temp_51] = @data[__temp_51] + @data[y]\n  @data[y] = x\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Geometry","path":"Crystalg/Geometry.html","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/geometry/circle.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L3"},{"filename":"src/crystalg/geometry/geometry.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L3"},{"filename":"src/crystalg/geometry/line.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L3"},{"filename":"src/crystalg/geometry/point.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L3"},{"filename":"src/crystalg/geometry/polygon.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L3"},{"filename":"src/crystalg/geometry/segment.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/DataStructures/KDTree","kind":"class","full_name":"Crystalg::DataStructures::KDTree(T)","name":"KDTree"}],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"counter_clockwise(a:Point,b:Point,c:Point):CCW-instance-method","html_id":"counter_clockwise(a:Point,b:Point,c:Point):CCW-instance-method","name":"counter_clockwise","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Point"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Point"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"}],"args_string":"(a : Point, b : Point, c : Point) : CCW","args_html":"(a : <a href=\"../Crystalg/Geometry/Point.html\">Point</a>, b : <a href=\"../Crystalg/Geometry/Point.html\">Point</a>, c : <a href=\"../Crystalg/Geometry/Point.html\">Point</a>) : <a href=\"../Crystalg/Geometry/CCW.html\">CCW</a>","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L13"},"def":{"name":"counter_clockwise","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Point"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Point"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"CCW","visibility":"Public","body":"b = b - a\nc = c - a\nif (b.cross(c)) > 0\n  return CCW::COUNTER_CLOCKWISE\nend\nif (b.cross(c)) < 0\n  return CCW::CLOCKWISE\nend\nif (b.dot(c)) < 0\n  return CCW::ONLINE_BACK\nend\nif b.norm < c.norm\n  return CCW::ONLINE_FRONT\nend\nCCW::ON_SEGMENT\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Geometry/CCW","path":"Crystalg/Geometry/CCW.html","kind":"enum","full_name":"Crystalg::Geometry::CCW","name":"CCW","abstract":false,"superclass":null,"ancestors":[{"html_id":"crystalg/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/geometry.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L5"}],"repository_name":"crystalg","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"COUNTER_CLOCKWISE","name":"COUNTER_CLOCKWISE","value":"1","doc":null,"summary":null},{"id":"CLOCKWISE","name":"CLOCKWISE","value":"-1","doc":null,"summary":null},{"id":"ONLINE_BACK","name":"ONLINE_BACK","value":"2","doc":null,"summary":null},{"id":"ONLINE_FRONT","name":"ONLINE_FRONT","value":"-2","doc":"c--a--b","summary":"<p>c--a--b</p>"},{"id":"ON_SEGMENT","name":"ON_SEGMENT","value":"0","doc":"a--b--c","summary":"<p>a--b--c</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":"a -> b -> c","summary":"<p>a -> b -> c</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"clockwise?-instance-method","html_id":"clockwise?-instance-method","name":"clockwise?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L7"},"def":{"name":"clockwise?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CLOCKWISE"}},{"id":"counter_clockwise?-instance-method","html_id":"counter_clockwise?-instance-method","name":"counter_clockwise?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L6"},"def":{"name":"counter_clockwise?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COUNTER_CLOCKWISE"}},{"id":"on_segment?-instance-method","html_id":"on_segment?-instance-method","name":"on_segment?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L10"},"def":{"name":"on_segment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ON_SEGMENT"}},{"id":"online_back?-instance-method","html_id":"online_back?-instance-method","name":"online_back?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L8"},"def":{"name":"online_back?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ONLINE_BACK"}},{"id":"online_front?-instance-method","html_id":"online_front?-instance-method","name":"online_front?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/geometry.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/geometry.cr#L9"},"def":{"name":"online_front?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ONLINE_FRONT"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Geometry/Circle","path":"Crystalg/Geometry/Circle.html","kind":"class","full_name":"Crystalg::Geometry::Circle(T)","name":"Circle","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/circle.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":null,"summary":null,"class_methods":[{"id":"circumscribed_circle(p,q,r)-class-method","html_id":"circumscribed_circle(p,q,r)-class-method","name":"circumscribed_circle","doc":null,"summary":null,"abstract":false,"args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":""},{"name":"q","doc":null,"default_value":"","external_name":"q","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"args_string":"(p, q, r)","args_html":"(p, q, r)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":68,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L68"},"def":{"name":"circumscribed_circle","args":[{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":""},{"name":"q","doc":null,"default_value":"","external_name":"q","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a, b = (q - p) * 2, (r - p) * 2\nc = Point(T).new((p.dot(p)) - (q.dot(q)), (p.dot(p)) - (r.dot(r)))\ntmp = (Point(T).new((a.y * c.y) - (b.y * c.x), (b.x * c.x) - (a.x * c.y))) / (a.cross(b))\nCircle(T).new(tmp, p.distance(tmp))\n"}}],"constructors":[{"id":"new(center,radius)-class-method","html_id":"new(center,radius)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":""},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":""}],"args_string":"(center, radius)","args_html":"(center, radius)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L8"},"def":{"name":"new","args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":""},{"name":"radius","doc":null,"default_value":"","external_name":"radius","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Circle(T).allocate\n_.initialize(center, radius)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L11"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(center == other.center) && (radius === other.radius)"}},{"id":"center:Point(T)-instance-method","html_id":"center:Point(T)-instance-method","name":"center","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point(T)","args_html":" : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L5"},"def":{"name":"center","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point(T)","visibility":"Public","body":"@center"}},{"id":"circumscribed_circle(a,b)-instance-method","html_id":"circumscribed_circle(a,b)-instance-method","name":"circumscribed_circle","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":63,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L63"},"def":{"name":"circumscribed_circle","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"q = (a + b) / 2\nCircle(T).new(q, (a - q).norm)\n"}},{"id":"contain?(target)-instance-method","html_id":"contain?(target)-instance-method","name":"contain?","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"args_string":"(target)","args_html":"(target)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L15"},"def":{"name":"contain?","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(target - center).norm.sign(radius <= T.zero)"}},{"id":"intersection(other)-instance-method","html_id":"intersection(other)-instance-method","name":"intersection","doc":"returns number of the common tangents","summary":"<p>returns number of the common tangents</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L20"},"def":{"name":"intersection","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dist = center.distance(other.center)\nif dist > (radius + other.radius)\n  return 4\nend\nif dist == (radius + other.radius)\n  return 3\nend\nif dist > (radius - other.radius).abs\n  return 2\nend\nif dist == (radius - other.radius).abs\n  return 1\nend\n0\n"}},{"id":"intersection_area(other)-instance-method","html_id":"intersection_area(other)-instance-method","name":"intersection_area","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":52,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L52"},"def":{"name":"intersection_area","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"r1, r2 = Math.min(radius, other.radius), Math.max(radius, other.radius)\ndist = (center - other.center).norm\nif (dist <=> (r2 - r1)) <= 0\n  return Math::PI * (r1 ** 2)\nend\nif (dist <=> (r2 + r1)) >= 0\n  return 0.0\nend\nrc = ((dist ** 2) + (r1 ** 2)) - ((r2 ** 2) / (2 * dist))\ntheta = Math.acos(rc / r1)\nphi = Math.acos((dist - rc) / r2)\n(((r1 ** 2) * theta) + ((r2 ** 2) * phi)) - ((dist * r1) * (Math.sin(theta)))\n"}},{"id":"intersection_points(other:self)-instance-method","html_id":"intersection_points(other:self)-instance-method","name":"intersection_points","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":41,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L41"},"def":{"name":"intersection_points","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Array(Point(T)).new\nif (center - other.center).norm > ((radius + other.radius) ** 2)\n  return result\nend\ntheta = Math.atan2(other.center.y - center.y, other.center.x - center.x)\ndist = center.distance(other.center)\nalpha = Math.acos((((dist ** 2) + (radius ** 2)) - (other.radius ** 2)) / ((2 * dist) * radius))\nresult << (Point.new(center.x + (radius * (Math.cos(theta + alpha))), center.y + (radius * (Math.sin(theta + alpha)))))\nresult << (Point.new(center.x + (radius * (Math.cos(theta - alpha))), center.y + (radius * (Math.sin(theta - alpha)))))\nresult\n"}},{"id":"intersection_points(line)-instance-method","html_id":"intersection_points(line)-instance-method","name":"intersection_points","doc":null,"summary":null,"abstract":false,"args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":""}],"args_string":"(line)","args_html":"(line)","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":29,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L29"},"def":{"name":"intersection_points","args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((line.distance(center)) <=> radius) > 0\n  return Array(Point(T)).new\nend\nq = line.project(center)\nt = (center - q).norm\nd = ((radius * radius) - (t * t)).sqrt\nbase = line.direction - line.position\nresult = Array(Point(T)).new\nresult << (q + (base * (d / base.norm)))\nresult << (q - (base * (d / base.norm)))\nresult\n"}},{"id":"radius:T-instance-method","html_id":"radius:T-instance-method","name":"radius","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/crystalg/geometry/circle.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/circle.cr#L6"},"def":{"name":"radius","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@radius"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Geometry/Line","path":"Crystalg/Geometry/Line.html","kind":"class","full_name":"Crystalg::Geometry::Line(T)","name":"Line","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/line.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(position,direction)-class-method","html_id":"new(position,direction)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"args_string":"(position, direction)","args_html":"(position, direction)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L8"},"def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Line(T).allocate\n_.initialize(position, direction)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"direction:Point(T)-instance-method","html_id":"direction:Point(T)-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point(T)","args_html":" : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L6"},"def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point(T)","visibility":"Public","body":"@direction"}},{"id":"distance(point)-instance-method","html_id":"distance(point)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"args_string":"(point)","args_html":"(point)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L32"},"def":{"name":"distance","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = direction - position\n(v.cross(point - position)).abs / v.norm\n"}},{"id":"intersection_point(other)-instance-method","html_id":"intersection_point(other)-instance-method","name":"intersection_point","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L37"},"def":{"name":"intersection_point","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"vector = direction - position\nother_vector = other.direction - other.position\nposition + (vector * ((other_vector.cross(other.position - position)) / (other_vector.cross(vector))))\n"}},{"id":"is_intersection?(other)-instance-method","html_id":"is_intersection?(other)-instance-method","name":"is_intersection?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L28"},"def":{"name":"is_intersection?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(is_parallel?(other))"}},{"id":"is_orthogonal?(other)-instance-method","html_id":"is_orthogonal?(other)-instance-method","name":"is_orthogonal?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L24"},"def":{"name":"is_orthogonal?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((direction - position).dot(other.direction - other.position)) == 0"}},{"id":"is_parallel?(other)-instance-method","html_id":"is_parallel?(other)-instance-method","name":"is_parallel?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L20"},"def":{"name":"is_parallel?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((direction - position).cross(other.direction - other.position)) == 0"}},{"id":"position:Point(T)-instance-method","html_id":"position:Point(T)-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point(T)","args_html":" : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L5"},"def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point(T)","visibility":"Public","body":"@position"}},{"id":"project(point)-instance-method","html_id":"project(point)-instance-method","name":"project","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"args_string":"(point)","args_html":"(point)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L11"},"def":{"name":"project","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"base = direction - position\nposition + (base * ((point - position).dot((base / (base.dot(base))))))\n"}},{"id":"reflect(q)-instance-method","html_id":"reflect(q)-instance-method","name":"reflect","doc":null,"summary":null,"abstract":false,"args":[{"name":"q","doc":null,"default_value":"","external_name":"q","restriction":""}],"args_string":"(q)","args_html":"(q)","location":{"filename":"src/crystalg/geometry/line.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/line.cr#L16"},"def":{"name":"reflect","args":[{"name":"q","doc":null,"default_value":"","external_name":"q","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"q + (((project(q)) - q) * 2)"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Geometry/Point","path":"Crystalg/Geometry/Point.html","kind":"class","full_name":"Crystalg::Geometry::Point(T)","name":"Point","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/point.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x:T,y:T)-class-method","html_id":"new(x:T,y:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"args_string":"(x : T, y : T)","args_html":"(x : T, y : T)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L9"},"def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Point(T).allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L20"},"def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(x * other, y * other)"}},{"id":"+(other:self)-instance-method","html_id":"+(other:self)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L12"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(x + other.x, y + other.y)"}},{"id":"-(other:self)-instance-method","html_id":"-(other:self)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L16"},"def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(x + (-other.x), y + (-other.y))"}},{"id":"/(other)-instance-method","html_id":"/(other)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L24"},"def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(x / other, y / other)"}},{"id":"(other)-instance-method","html_id":"(other)-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L28"},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if x != other.x\n  x <=> other.x\nelse\n  y <=> other.y\nend"}},{"id":"==(other)-instance-method","html_id":"==(other)-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L36"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x === other.x) && (y === other.y)"}},{"id":"arg-instance-method","html_id":"arg-instance-method","name":"arg","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/point.cr","line_number":62,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L62"},"def":{"name":"arg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if x.sign > 0\n  LibM.atan(y / x)\nend\nif x.sign < 0\n  (LibM.atan(y / x)) + PI\nend\nif y.sign > 0\n  PI / (2.0.as(Float))\nend\nif y.sign < 0\n  (3.0 * PI) / (2.0.as(Float))\nend\n0\n"}},{"id":"cross(other)-instance-method","html_id":"cross(other)-instance-method","name":"cross","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":52,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L52"},"def":{"name":"cross","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x * other.y) - (y * other.x)"}},{"id":"distance(other)-instance-method","html_id":"distance(other)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":44,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L44"},"def":{"name":"distance","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self - other).norm"}},{"id":"dot(other)-instance-method","html_id":"dot(other)-instance-method","name":"dot","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/point.cr","line_number":48,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L48"},"def":{"name":"dot","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x * other.x) + (y * other.y)"}},{"id":"norm-instance-method","html_id":"norm-instance-method","name":"norm","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/point.cr","line_number":40,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L40"},"def":{"name":"norm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((x * x) + (y * y)).sqrt.as(T)"}},{"id":"rotate(radian,pivot=Point.new(0,0))-instance-method","html_id":"rotate(radian,pivot=Point.new(0,0))-instance-method","name":"rotate","doc":null,"summary":null,"abstract":false,"args":[{"name":"radian","doc":null,"default_value":"","external_name":"radian","restriction":""},{"name":"pivot","doc":null,"default_value":"Point.new(0, 0)","external_name":"pivot","restriction":""}],"args_string":"(radian, pivot = <span class=\"t\">Point</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>))","args_html":"(radian, pivot = <span class=\"t\">Point</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>))","location":{"filename":"src/crystalg/geometry/point.cr","line_number":56,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L56"},"def":{"name":"rotate","args":[{"name":"radian","doc":null,"default_value":"","external_name":"radian","restriction":""},{"name":"pivot","doc":null,"default_value":"Point.new(0, 0)","external_name":"pivot","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new((((LibM.cos(r)) * (x - pivot.x)) - ((LibM.sin(r)) * (y - pivot.y))) + pivot.x, (((LibM.sin(r)) * (x - pivot.x)) + ((LibM.cos(r)) * (y - pivot.y))) + pivot.y)"}},{"id":"x:T-instance-method","html_id":"x:T-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/crystalg/geometry/point.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L7"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@x"}},{"id":"y:T-instance-method","html_id":"y:T-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","args_html":" : T","location":{"filename":"src/crystalg/geometry/point.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/point.cr#L7"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@y"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Geometry/Polygon","path":"Crystalg/Geometry/Polygon.html","kind":"class","full_name":"Crystalg::Geometry::Polygon(T)","name":"Polygon","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/polygon.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(points:Array(Point(T)))-class-method","html_id":"new(points:Array(Point(T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point(T))"}],"args_string":"(points : Array(Point(T)))","args_html":"(points : Array(<a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)))","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L9"},"def":{"name":"new","args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Polygon(T).allocate\n_.initialize(points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*points:Point(T))-class-method","html_id":"new(*points:Point(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Point(T)"}],"args_string":"(*points : Point(T))","args_html":"(*points : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T))","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L5"},"def":{"name":"new","args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Point(T)"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Polygon(T).allocate\n_.initialize(*points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L32"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"this, that = self.@points, other.@points\nif this.size != that.size\n  return false\nend\nthis.sort == that.sort\n"}},{"id":"[](i)-instance-method","html_id":"[](i)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","args_html":"(i)","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L28"},"def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@points[i]"}},{"id":"area-instance-method","html_id":"area-instance-method","name":"area","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":62,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L62"},"def":{"name":"area","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = T.zero\n@points.each_with_index do |e, i|\n  result = result + ((e.x - (nxt(i)).x) * (e.y + (nxt(i)).y))\nend\nresult.abs / 2.0\n"}},{"id":"contain(target:Point(T)):Containment-instance-method","html_id":"contain(target:Point(T)):Containment-instance-method","name":"contain","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Point(T)"}],"args_string":"(target : Point(T)) : Containment","args_html":"(target : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)) : <a href=\"../../Crystalg/Geometry/Polygon/Containment.html\">Containment</a>","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":51,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L51"},"def":{"name":"contain","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Point(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Containment","visibility":"Public","body":"is_contain = false\n@points.each_with_index do |e, i|\n  a, b = (cur(i)) - target, (nxt(i)) - target\n  if a.y > b.y\n    a, b = b, a\n  end\n  if (a.y <= 0 && 0 < b.y) && (a.cross(b)) < 0\n    is_contain = is_contain ^ true\n  end\n  if ((a.cross(b)) == 0) && (a.dot(b)) <= 0\n    return Containment::ON\n  end\nend\nis_contain ? Containment::IN : Containment::OUT\n"}},{"id":"convex_cut(line:Line(T))-instance-method","html_id":"convex_cut(line:Line(T))-instance-method","name":"convex_cut","doc":null,"summary":null,"abstract":false,"args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"Line(T)"}],"args_string":"(line : Line(T))","args_html":"(line : <a href=\"../../Crystalg/Geometry/Line.html\">Line</a>(T))","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":70,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L70"},"def":{"name":"convex_cut","args":[{"name":"line","doc":null,"default_value":"","external_name":"line","restriction":"Line(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos, dir = line.position, line.direction\nresult = Array(Point(T)).new\n@points.each_with_index do |e, i|\n  vec = dir - pos\n  side = Segment(T).new(e, nxt(i))\n  if (counter_clockwise(pos, dir, e)) != CCW::CLOCKWISE\n    result << e\n  end\n  if side.is_intersection?(Segment(T).new(line.position, line.direction))\n    result << (side.intersection_point(Segment(T).new(pos, dir)))\n  end\nend\nPolygon.new(result)\n"}},{"id":"convex_hull-instance-method","html_id":"convex_hull-instance-method","name":"convex_hull","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":83,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L83"},"def":{"name":"convex_hull","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"points = @points\npoints.sort\nresult = Array(Point(T)).new\n(0...points.size).each do |i|\n  while result.size > 1\n    tail1 = result[result.size - 1]\n    tail2 = result[result.size - 2]\n    (tail1 - tail2).cross(points[i] - tail1)\n    if ((tail1 - tail2).cross(points[i] - tail1)) < 0\n      break\n    end\n    result.pop\n  end\n  result << points[i]\nend\nt = result.size\n(0..(points.size - 2)).reverse_each do |i|\n  tail1 = result[result.size - 1]\n  tail2 = result[result.size - 2]\n  while result.size > t\n    tail1 = result[result.size - 1]\n    tail2 = result[result.size - 2]\n    if ((tail1 - tail2).cross(points[i] - tail1)) < 0\n      break\n    end\n    result.pop\n  end\n  result << points[i]\nend\nresult.pop\nPolygon.new(result)\n"}},{"id":"cur(i)-instance-method","html_id":"cur(i)-instance-method","name":"cur","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","args_html":"(i)","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L20"},"def":{"name":"cur","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@points[i % @points.size]"}},{"id":"diameter-instance-method","html_id":"diameter-instance-method","name":"diameter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":114,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L114"},"def":{"name":"diameter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"qs = convex_hull\nn = qs.size\nif n == 2\n  return 0.0\nend\ni = j = 0\n(0...n).each do |k|\n  if qs[k] < qs[i]\n    i = k\n  end\n  if qs[j] < qs[k]\n    j = k\n  end\nend\nresult = 0_f64\nsi, sj = i, j\nwhile (i != sj) && (j != si)\n  result = Math.max(result, qs[i].distance(qs[j]))\n  if (((qs.nxt(i)) - (qs.cur(i))).cross((qs.nxt(j)) - (qs.cur(j)))) < 0\n    i = (i + 1) % n\n  else\n    j = (j + 1) % n\n  end\nend\nresult\n"}},{"id":"is_convex?-instance-method","html_id":"is_convex?-instance-method","name":"is_convex?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L38"},"def":{"name":"is_convex?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@points.each_with_index do |e, i|\n  if (counter_clockwise(prv(i), cur(i), nxt(i))) == CCW::CLOCKWISE\n    return false\n  end\nend\ntrue\n"}},{"id":"nxt(i)-instance-method","html_id":"nxt(i)-instance-method","name":"nxt","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","args_html":"(i)","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L24"},"def":{"name":"nxt","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cur(i + 1)"}},{"id":"prv(i)-instance-method","html_id":"prv(i)-instance-method","name":"prv","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"args_string":"(i)","args_html":"(i)","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L16"},"def":{"name":"prv","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cur(i - 1)"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":12,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L12"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@points.size"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Geometry/Polygon/Containment","path":"Crystalg/Geometry/Polygon/Containment.html","kind":"enum","full_name":"Crystalg::Geometry::Polygon::Containment","name":"Containment","abstract":false,"superclass":null,"ancestors":[{"html_id":"crystalg/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/polygon.cr","line_number":45,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L45"}],"repository_name":"crystalg","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"OUT","name":"OUT","value":"0","doc":null,"summary":null},{"id":"IN","name":"IN","value":"1","doc":null,"summary":null},{"id":"ON","name":"ON","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry/Polygon","kind":"class","full_name":"Crystalg::Geometry::Polygon(T)","name":"Polygon"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"in?-instance-method","html_id":"in?-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":47,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L47"},"def":{"name":"in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IN"}},{"id":"on?-instance-method","html_id":"on?-instance-method","name":"on?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":48,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L48"},"def":{"name":"on?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ON"}},{"id":"out?-instance-method","html_id":"out?-instance-method","name":"out?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/polygon.cr","line_number":46,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/polygon.cr#L46"},"def":{"name":"out?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OUT"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Geometry/Segment","path":"Crystalg/Geometry/Segment.html","kind":"class","full_name":"Crystalg::Geometry::Segment(T)","name":"Segment","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/segment.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Geometry","kind":"module","full_name":"Crystalg::Geometry","name":"Geometry"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(position,direction)-class-method","html_id":"new(position,direction)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"args_string":"(position, direction)","args_html":"(position, direction)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L8"},"def":{"name":"new","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Segment(T).allocate\n_.initialize(position, direction)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"direction:Point(T)-instance-method","html_id":"direction:Point(T)-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point(T)","args_html":" : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L6"},"def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point(T)","visibility":"Public","body":"@direction"}},{"id":"distance(point:Point(T))-instance-method","html_id":"distance(point:Point(T))-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point(T)"}],"args_string":"(point : Point(T))","args_html":"(point : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T))","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L23"},"def":{"name":"distance","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a, b, c = position, direction, point\nif ((b - a).dot(c - a)) < 0\n  return c.distance(a)\nend\nif ((a - b).dot(c - b)) < 0\n  return c.distance(b)\nend\n((b - a).cross(c - a)).abs / (b.distance(a))\n"}},{"id":"distance(other)-instance-method","html_id":"distance(other)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":30,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L30"},"def":{"name":"distance","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if is_intersection?(other)\n  return 0.0\nend\nMath.min(Math.min(distance(other.position), distance(other.direction)), Math.min(other.distance(position), other.distance(direction)))\n"}},{"id":"intersection_point(other)-instance-method","html_id":"intersection_point(other)-instance-method","name":"intersection_point","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":44,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L44"},"def":{"name":"intersection_point","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"q = other.direction - other.position\nd1 = (q.cross(position - other.position)).abs\nd2 = (q.cross(direction - other.position)).abs\nposition + ((direction - position) * (d1 / (d1 + d2)))\n"}},{"id":"is_intersection?(other)-instance-method","html_id":"is_intersection?(other)-instance-method","name":"is_intersection?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L38"},"def":{"name":"is_intersection?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a, b, c, d = position, direction, other.position, other.direction\n((counter_clockwise(a, b, c)).value * (counter_clockwise(a, b, d)).value) <= 0 && ((counter_clockwise(c, d, a)).value * (counter_clockwise(c, d, b)).value) <= 0\n"}},{"id":"is_overlap?(other)-instance-method","html_id":"is_overlap?(other)-instance-method","name":"is_overlap?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L19"},"def":{"name":"is_overlap?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(is_parallel(other)) && (on(other.position || (on(other.direction || (other.on(position || (other.on(direction))))))))"}},{"id":"is_parallel?(other)-instance-method","html_id":"is_parallel?(other)-instance-method","name":"is_parallel?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L15"},"def":{"name":"is_parallel?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((direction - position).cross(other.direction - other.position)) == 0"}},{"id":"on?(c)-instance-method","html_id":"on?(c)-instance-method","name":"on?","doc":null,"summary":null,"abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""}],"args_string":"(c)","args_html":"(c)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L11"},"def":{"name":"on?","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(counter_clockwise(position, direction, c)) == CCW::ON_SEGMENT"}},{"id":"position:Point(T)-instance-method","html_id":"position:Point(T)-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Point(T)","args_html":" : <a href=\"../../Crystalg/Geometry/Point.html\">Point</a>(T)","location":{"filename":"src/crystalg/geometry/segment.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/segment.cr#L5"},"def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Point(T)","visibility":"Public","body":"@position"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Graph","path":"Crystalg/Graph.html","kind":"module","full_name":"Crystalg::Graph","name":"Graph","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/connected_components/context.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/context.cr#L1"},{"filename":"src/crystalg/graph/directed_graph.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L4"},{"filename":"src/crystalg/graph/edge.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L1"},{"filename":"src/crystalg/graph/flow/dinic.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/dinic.cr#L4"},{"filename":"src/crystalg/graph/flow/ford_fulkerson.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/ford_fulkerson.cr#L3"},{"filename":"src/crystalg/graph/flow/hopcroft_karp.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/hopcroft_karp.cr#L1"},{"filename":"src/crystalg/graph/flow_graph.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L3"},{"filename":"src/crystalg/graph/graph.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/graph.cr#L1"},{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents","path":"Crystalg/Graph/ConnectedComponents.html","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents","name":"ConnectedComponents","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/connected_components/articulation_points.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/articulation_points.cr#L3"},{"filename":"src/crystalg/graph/connected_components/bridges.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/bridges.cr#L3"},{"filename":"src/crystalg/graph/connected_components/context.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/context.cr#L1"},{"filename":"src/crystalg/graph/connected_components/cycle_detection.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/cycle_detection.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/ArticulationPoints","path":"Crystalg/Graph/ConnectedComponents/ArticulationPoints.html","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::ArticulationPoints","name":"ArticulationPoints","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/connected_components/articulation_points.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/articulation_points.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Graph/UndirectedGraph","kind":"class","full_name":"Crystalg::Graph::UndirectedGraph(C)","name":"UndirectedGraph"}],"namespace":{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents","name":"ConnectedComponents"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"articulation_points:Array(NodeID)-instance-method","html_id":"articulation_points:Array(NodeID)-instance-method","name":"articulation_points","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(NodeID)","args_html":" : Array(<a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/graph/connected_components/articulation_points.cr","line_number":21,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/articulation_points.cr#L21"},"def":{"name":"articulation_points","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(NodeID)","visibility":"Public","body":"ctx = Context.new(@size)\ncount = 0\nresult = Array(NodeID).new\narticulation_points_dfs(0, ctx)\n(0...@size).each do |i|\n  if (ctx.parent[i] == 0) && (i != 0)\n    count = count + 1\n  end\n  if ctx.parent[i] > 0 && ctx.lowlink[i] >= ctx.order[ctx.parent[i]]\n    result << ctx.parent[i]\n  end\nend\nif count >= 2\n  result << 0\nend\nresult.sort!.uniq!\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/Bridges","path":"Crystalg/Graph/ConnectedComponents/Bridges.html","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::Bridges(T)","name":"Bridges","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/connected_components/bridges.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/bridges.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Graph/UndirectedGraph","kind":"class","full_name":"Crystalg::Graph::UndirectedGraph(C)","name":"UndirectedGraph"}],"namespace":{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents","name":"ConnectedComponents"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"bridges-instance-method","html_id":"bridges-instance-method","name":"bridges","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/connected_components/bridges.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/bridges.cr#L25"},"def":{"name":"bridges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx = Context.new(@size)\nbridges = Array(Edge(T)).new\nbridge_dfs(0, bridges, ctx)\nbridges\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/CycleDetection","path":"Crystalg/Graph/ConnectedComponents/CycleDetection.html","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::CycleDetection","name":"CycleDetection","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/connected_components/cycle_detection.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/cycle_detection.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Graph/DirectedGraph","kind":"class","full_name":"Crystalg::Graph::DirectedGraph(C)","name":"DirectedGraph"}],"namespace":{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents","name":"ConnectedComponents"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"has_cycle?-instance-method","html_id":"has_cycle?-instance-method","name":"has_cycle?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/connected_components/cycle_detection.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/cycle_detection.cr#L16"},"def":{"name":"has_cycle?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"used = Array(Int32).new(@size, 0)\nflag = false\n(0...@size).each do |node_id|\n  flag || (flag = dfs(node_id, used, flag))\nend\nflag\n"}},{"id":"has_negative_cycle?-instance-method","html_id":"has_negative_cycle?-instance-method","name":"has_negative_cycle?","doc":"bellman ford","summary":"<p>bellman ford</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/connected_components/cycle_detection.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/connected_components/cycle_detection.cr#L24"},"def":{"name":"has_negative_cycle?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dist = Array(Int32).new(@size, 0)\n(0...@size).each do |i|\n  edges.each do |edge|\n    if dist[edge.target] > (dist[edge.source] + edge.cost)\n      dist[edge.target] = dist[edge.source] + edge.cost\n      if i == (@size - 1)\n        return true\n      end\n    end\n  end\nend\nfalse\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Graph/Dinic","path":"Crystalg/Graph/Dinic.html","kind":"class","full_name":"Crystalg::Graph::Dinic(C)","name":"Dinic","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/flow/dinic.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/dinic.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph:FlowGraph(C))-class-method","html_id":"new(graph:FlowGraph(C))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"FlowGraph(C)"}],"args_string":"(graph : FlowGraph(C))","args_html":"(graph : <a href=\"../../Crystalg/Graph/FlowGraph.html\">FlowGraph</a>(C))","location":{"filename":"src/crystalg/graph/flow/dinic.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/dinic.cr#L6"},"def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"FlowGraph(C)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Dinic(C).allocate\n_.initialize(graph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"max_flow(source:NodeID,target:NodeID)-instance-method","html_id":"max_flow(source:NodeID,target:NodeID)-instance-method","name":"max_flow","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"}],"args_string":"(source : NodeID, target : NodeID)","args_html":"(source : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/graph/flow/dinic.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/dinic.cr#L11"},"def":{"name":"max_flow","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"flow = C.zero\nloop do\n  bfs(source)\n  if @level[target] < 0\n    return flow\n  end\n  @iter.fill(0)\n  while (f = dfs(source, target, C::MAX)) > C.zero\n    flow = flow + f\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/DirectedGraph","path":"Crystalg/Graph/DirectedGraph.html","kind":"class","full_name":"Crystalg::Graph::DirectedGraph(C)","name":"DirectedGraph","abstract":false,"superclass":{"html_id":"crystalg/Crystalg/Graph/Graph","kind":"class","full_name":"Crystalg::Graph::Graph","name":"Graph"},"ancestors":[{"html_id":"crystalg/Crystalg/Graph/ShortestPath/Dijkstra","kind":"module","full_name":"Crystalg::Graph::ShortestPath::Dijkstra","name":"Dijkstra"},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/CycleDetection","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::CycleDetection","name":"CycleDetection"},{"html_id":"crystalg/Crystalg/Graph/Graph","kind":"class","full_name":"Crystalg::Graph::Graph","name":"Graph"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/directed_graph.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L6"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/CycleDetection","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::CycleDetection","name":"CycleDetection"},{"html_id":"crystalg/Crystalg/Graph/ShortestPath/Dijkstra","kind":"module","full_name":"Crystalg::Graph::ShortestPath::Dijkstra","name":"Dijkstra"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":"C: type of cost","summary":"<p>C: type of cost</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L9"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(C).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(edge:Edge(C))-instance-method","html_id":"add(edge:Edge(C))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge(C)"}],"args_string":"(edge : Edge(C))","args_html":"(edge : <a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(C))","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L15"},"def":{"name":"add","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge(C)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[edge.source] << {edge.target, edge.cost}"}},{"id":"adjacent_nodes(node_id:NodeID):Array(Tuple(C,NodeID))-instance-method","html_id":"adjacent_nodes(node_id:NodeID):Array(Tuple(C,NodeID))-instance-method","name":"adjacent_nodes","doc":null,"summary":null,"abstract":false,"args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"args_string":"(node_id : NodeID) : Array(Tuple(C, NodeID))","args_html":"(node_id : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>) : Array(Tuple(C, <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>))","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L19"},"def":{"name":"adjacent_nodes","args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(C, NodeID))","visibility":"Public","body":"@graph[node_id].map do |e|\n  {e[0], e[1]}\nend"}},{"id":"edges:Array(Edge(C))-instance-method","html_id":"edges:Array(Edge(C))-instance-method","name":"edges","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Edge(C))","args_html":" : Array(<a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(C))","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L25"},"def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Edge(C))","visibility":"Public","body":"result = Array(Edge(C)).new\n(0...@size).each do |node_id|\n  node_edges = (adjacent_nodes(node_id)).map do |target_id, cost|\n    Edge(C).new(node_id, target_id, cost)\n  end\n  result.concat(node_edges)\nend\nresult.uniq!\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L7"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"topological_sort:Array(NodeID)-instance-method","html_id":"topological_sort:Array(NodeID)-instance-method","name":"topological_sort","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(NodeID)","args_html":" : Array(<a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/graph/directed_graph.cr","line_number":36,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/directed_graph.cr#L36"},"def":{"name":"topological_sort","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(NodeID)","visibility":"Public","body":"used = Array(Bool).new(@size, false)\norder = Array(NodeID).new\n(0...@size).each do |i|\n  if !used[i]\n    topological_sort(used, order, i)\n  end\nend\norder.reverse!\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/Edge","path":"Crystalg/Graph/Edge.html","kind":"class","full_name":"Crystalg::Graph::Edge(T)","name":"Edge","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/edge.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(source:NodeID,target:NodeID,cost:T)-class-method","html_id":"new(source:NodeID,target:NodeID,cost:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"args_string":"(source : NodeID, target : NodeID, cost : T)","args_html":"(source : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, cost : T)","location":{"filename":"src/crystalg/graph/edge.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L7"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Edge(T).allocate\n_.initialize(source, target, cost)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"(other:Edge(T))-instance-method","html_id":"(other:Edge(T))-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"args_string":"(other : Edge(T))","args_html":"(other : <a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(T))","location":{"filename":"src/crystalg/graph/edge.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L10"},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if cost != other.cost\n  cost <=> other.cost\nelse\n  if source != other.source\n    source <=> other.source\n  else\n    target <=> other.target\n  end\nend"}},{"id":"==(other:Edge(T))-instance-method","html_id":"==(other:Edge(T))-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"args_string":"(other : Edge(T))","args_html":"(other : <a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(T))","location":{"filename":"src/crystalg/graph/edge.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L20"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((source == other.source) || (source == other.target)) && ((target == other.source) || (target == other.target))) && (cost == other.cost)"}},{"id":"===(other:Edge(T))-instance-method","html_id":"===(other:Edge(T))-instance-method","name":"===","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"args_string":"(other : Edge(T))","args_html":"(other : <a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(T))","location":{"filename":"src/crystalg/graph/edge.cr","line_number":26,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L26"},"def":{"name":"===","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Edge(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((source == other.source) && (target == other.target)) && (cost == other.cost)"}},{"id":"cost-instance-method","html_id":"cost-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L5"},"def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cost"}},{"id":"source-instance-method","html_id":"source-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L5"},"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}},{"id":"target-instance-method","html_id":"target-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L5"},"def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@target"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/FlowEdge","path":"Crystalg/Graph/FlowEdge.html","kind":"class","full_name":"Crystalg::Graph::FlowEdge(U)","name":"FlowEdge","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/edge.cr","line_number":31,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L31"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(source:NodeID,target:NodeID,capacity:U)-class-method","html_id":"new(source:NodeID,target:NodeID,capacity:U)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"U"}],"args_string":"(source : NodeID, target : NodeID, capacity : U)","args_html":"(source : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, capacity : U)","location":{"filename":"src/crystalg/graph/edge.cr","line_number":34,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L34"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"U"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FlowEdge(U).allocate\n_.initialize(source, target, capacity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"capacity-instance-method","html_id":"capacity-instance-method","name":"capacity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L32"},"def":{"name":"capacity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@capacity"}},{"id":"source-instance-method","html_id":"source-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L32"},"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}},{"id":"target-instance-method","html_id":"target-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L32"},"def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@target"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/FlowGraph","path":"Crystalg/Graph/FlowGraph.html","kind":"class","full_name":"Crystalg::Graph::FlowGraph(C)","name":"FlowGraph","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/flow_graph.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":"C: type of capacity","summary":"<p>C: type of capacity</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crystalg/graph/flow_graph.cr","line_number":8,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L8"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FlowGraph(C).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(edge:FlowEdge(C))-instance-method","html_id":"add(edge:FlowEdge(C))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"FlowEdge(C)"}],"args_string":"(edge : FlowEdge(C))","args_html":"(edge : <a href=\"../../Crystalg/Graph/FlowEdge.html\">FlowEdge</a>(C))","location":{"filename":"src/crystalg/graph/flow_graph.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L14"},"def":{"name":"add","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"FlowEdge(C)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[edge.source] << {edge.target, edge.capacity, @graph[edge.target].size}\n@graph[edge.target] << {edge.source, C.zero, @graph[edge.source].size - 1}\n"}},{"id":"adjacent_nodes(node_id:NodeID):Array(Tuple(NodeID,C,Int32))-instance-method","html_id":"adjacent_nodes(node_id:NodeID):Array(Tuple(NodeID,C,Int32))-instance-method","name":"adjacent_nodes","doc":null,"summary":null,"abstract":false,"args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"args_string":"(node_id : NodeID) : Array(Tuple(NodeID, C, Int32))","args_html":"(node_id : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>) : Array(Tuple(<a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, C, Int32))","location":{"filename":"src/crystalg/graph/flow_graph.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L19"},"def":{"name":"adjacent_nodes","args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(NodeID, C, Int32))","visibility":"Public","body":"@graph[node_id].map do |target_id, capacity, rev|\n  {target_id, capacity, rev}\nend"}},{"id":"flow(v:NodeID,index:Int32,f:C):C-instance-method","html_id":"flow(v:NodeID,index:Int32,f:C):C-instance-method","name":"flow","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"C"}],"args_string":"(v : NodeID, index : Int32, f : C) : C","args_html":"(v : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, index : Int32, f : C) : C","location":{"filename":"src/crystalg/graph/flow_graph.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L25"},"def":{"name":"flow","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"NodeID"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"},{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"C"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"C","visibility":"Public","body":"e = @graph[v][index]\nr = @graph[e[0]][e[2]]\n@graph[v][index] = {e[0], e[1] - f, e[2]}\n@graph[e[0]][e[2]] = {r[0], r[1] + f, r[2]}\nf\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/flow_graph.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow_graph.cr#L6"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/FordFulkerson","path":"Crystalg/Graph/FordFulkerson.html","kind":"class","full_name":"Crystalg::Graph::FordFulkerson(C)","name":"FordFulkerson","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/flow/ford_fulkerson.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/ford_fulkerson.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":"C: type of capacity","summary":"<p>C: type of capacity</p>","class_methods":[],"constructors":[{"id":"new(graph:FlowGraph(C))-class-method","html_id":"new(graph:FlowGraph(C))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"FlowGraph(C)"}],"args_string":"(graph : FlowGraph(C))","args_html":"(graph : <a href=\"../../Crystalg/Graph/FlowGraph.html\">FlowGraph</a>(C))","location":{"filename":"src/crystalg/graph/flow/ford_fulkerson.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/ford_fulkerson.cr#L6"},"def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"FlowGraph(C)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = FordFulkerson(C).allocate\n_.initialize(graph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dfs(node_id:NodeID,target:NodeID,flow:C):C-instance-method","html_id":"dfs(node_id:NodeID,target:NodeID,flow:C):C-instance-method","name":"dfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"flow","doc":null,"default_value":"","external_name":"flow","restriction":"C"}],"args_string":"(node_id : NodeID, target : NodeID, flow : C) : C","args_html":"(node_id : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, flow : C) : C","location":{"filename":"src/crystalg/graph/flow/ford_fulkerson.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/ford_fulkerson.cr#L20"},"def":{"name":"dfs","args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"flow","doc":null,"default_value":"","external_name":"flow","restriction":"C"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"C","visibility":"Public","body":"if node_id == target\n  return flow\nend\n@used[node_id] = true\n(@graph.adjacent_nodes(node_id)).each_with_index do |node, i|\n  next_id, capacity = node\n  if (!@used[next_id]) && capacity > C.zero\n    d = dfs(next_id, target, Math.min(flow, capacity))\n    if d > C.zero\n      return @graph.flow(node_id, i, d)\n    end\n  end\nend\nC.zero\n"}},{"id":"max_flow(source:NodeID,target:NodeID)-instance-method","html_id":"max_flow(source:NodeID,target:NodeID)-instance-method","name":"max_flow","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"}],"args_string":"(source : NodeID, target : NodeID)","args_html":"(source : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/graph/flow/ford_fulkerson.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/ford_fulkerson.cr#L10"},"def":{"name":"max_flow","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"flow = C.zero\nloop do\n  @used.fill(false)\n  f = dfs(source, target, C::MAX)\n  if f == C.zero\n    return flow\n  end\n  flow = flow + f\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/Graph","path":"Crystalg/Graph/Graph.html","kind":"class","full_name":"Crystalg::Graph::Graph(C)","name":"Graph","abstract":true,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/graph.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/graph.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"crystalg/Crystalg/Graph/DirectedGraph","kind":"class","full_name":"Crystalg::Graph::DirectedGraph(C)","name":"DirectedGraph"},{"html_id":"crystalg/Crystalg/Graph/UndirectedGraph","kind":"class","full_name":"Crystalg::Graph::UndirectedGraph(C)","name":"UndirectedGraph"}],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/graph/graph.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/graph.cr#L5"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/HopcroftKarp","path":"Crystalg/Graph/HopcroftKarp.html","kind":"class","full_name":"Crystalg::Graph::HopcroftKarp","name":"HopcroftKarp","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/flow/hopcroft_karp.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/hopcroft_karp.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(left_size:Int32,right_size:Int32)-class-method","html_id":"new(left_size:Int32,right_size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"left_size","doc":null,"default_value":"","external_name":"left_size","restriction":"Int32"},{"name":"right_size","doc":null,"default_value":"","external_name":"right_size","restriction":"Int32"}],"args_string":"(left_size : Int32, right_size : Int32)","args_html":"(left_size : Int32, right_size : Int32)","location":{"filename":"src/crystalg/graph/flow/hopcroft_karp.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/hopcroft_karp.cr#L14"},"def":{"name":"new","args":[{"name":"left_size","doc":null,"default_value":"","external_name":"left_size","restriction":"Int32"},{"name":"right_size","doc":null,"default_value":"","external_name":"right_size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(left_size, right_size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(left_id:Int32,right_id:Int32)-instance-method","html_id":"add_edge(left_id:Int32,right_id:Int32)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"left_id","doc":null,"default_value":"","external_name":"left_id","restriction":"Int32"},{"name":"right_id","doc":null,"default_value":"","external_name":"right_id","restriction":"Int32"}],"args_string":"(left_id : Int32, right_id : Int32)","args_html":"(left_id : Int32, right_id : Int32)","location":{"filename":"src/crystalg/graph/flow/hopcroft_karp.cr","line_number":25,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/hopcroft_karp.cr#L25"},"def":{"name":"add_edge","args":[{"name":"left_id","doc":null,"default_value":"","external_name":"left_id","restriction":"Int32"},{"name":"right_id","doc":null,"default_value":"","external_name":"right_id","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@head << right_id\n@prev << @last[left_id]\n@last[left_id] = @edge_size\n@edge_size = @edge_size + 1\n"}},{"id":"bipartite_matching-instance-method","html_id":"bipartite_matching-instance-method","name":"bipartite_matching","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/flow/hopcroft_karp.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/flow/hopcroft_karp.cr#L32"},"def":{"name":"bipartite_matching","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@used.fill(false)\n@match.fill(-1)\nflow = 0\nloop do\n  bfs\n  @visited.fill(false)\n  f = 0\n  (0...@left_size).each do |u|\n    if (!@used[u]) && (dfs(u))\n      f = f + 1\n    end\n  end\n  if f == 0\n    return flow\n  end\n  flow = flow + f\nend\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/NodeID","path":"Crystalg/Graph/NodeID.html","kind":"alias","full_name":"Crystalg::Graph::NodeID","name":"NodeID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/graph.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/graph.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":true,"aliased":"Int32","aliased_html":"Int32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/ShortestPath","path":"Crystalg/Graph/ShortestPath.html","kind":"module","full_name":"Crystalg::Graph::ShortestPath","name":"ShortestPath","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/shortest_path/dijkstra.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/shortest_path/dijkstra.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Graph/ShortestPath/Dijkstra","path":"Crystalg/Graph/ShortestPath/Dijkstra.html","kind":"module","full_name":"Crystalg::Graph::ShortestPath::Dijkstra(C)","name":"Dijkstra","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/shortest_path/dijkstra.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/shortest_path/dijkstra.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Graph/DirectedGraph","kind":"class","full_name":"Crystalg::Graph::DirectedGraph(C)","name":"DirectedGraph"}],"namespace":{"html_id":"crystalg/Crystalg/Graph/ShortestPath","kind":"module","full_name":"Crystalg::Graph::ShortestPath","name":"ShortestPath"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"dijkstra(start:NodeID):Array(Tuple(C,NodeID?)?)-instance-method","html_id":"dijkstra(start:NodeID):Array(Tuple(C,NodeID?)?)-instance-method","name":"dijkstra","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"NodeID"}],"args_string":"(start : NodeID) : Array(Tuple(C, NodeID?)?)","args_html":"(start : <a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>) : Array(Tuple(C, <a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>?)?)","location":{"filename":"src/crystalg/graph/shortest_path/dijkstra.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/shortest_path/dijkstra.cr#L5"},"def":{"name":"dijkstra","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(C, NodeID | ::Nil) | ::Nil)","visibility":"Public","body":"que = PriorityQueue(Tuple(C, NodeID)).new\nresult = Array(Tuple(C, NodeID | ::Nil) | ::Nil).new(@size, nil)\nstart_state = {0, start}\nque.push(start_state)\nresult[start] = {0, nil}\nwhile !(current_state = que.pop!).nil?\n  current_cost, node_id = current_state\n  (adjacent_nodes(node_id)).each do |target_id, target_cost|\n    is_visited = !result[target_id].nil?\n    cost = current_cost + target_cost\n    if is_visited && (gte?(cost, result[target_id]))\n      next\n    end\n    result[target_id] = {cost, node_id}\n    que.push({cost, target_id})\n  end\nend\nresult\n"}},{"id":"get_dijkstra_path(node_id:NodeID,dijkstra_result:Array(Tuple(C,NodeID?)?)):Array(NodeID)-instance-method","html_id":"get_dijkstra_path(node_id:NodeID,dijkstra_result:Array(Tuple(C,NodeID?)?)):Array(NodeID)-instance-method","name":"get_dijkstra_path","doc":null,"summary":null,"abstract":false,"args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"},{"name":"dijkstra_result","doc":null,"default_value":"","external_name":"dijkstra_result","restriction":"Array(Tuple(C, NodeID | ::Nil) | ::Nil)"}],"args_string":"(node_id : NodeID, dijkstra_result : Array(Tuple(C, NodeID?)?)) : Array(NodeID)","args_html":"(node_id : <a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>, dijkstra_result : Array(Tuple(C, <a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>?)?)) : Array(<a href=\"../../../Crystalg/Graph/NodeID.html\">NodeID</a>)","location":{"filename":"src/crystalg/graph/shortest_path/dijkstra.cr","line_number":33,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/shortest_path/dijkstra.cr#L33"},"def":{"name":"get_dijkstra_path","args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"},{"name":"dijkstra_result","doc":null,"default_value":"","external_name":"dijkstra_result","restriction":"Array(Tuple(C, NodeID | ::Nil) | ::Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(NodeID)","visibility":"Public","body":"path = [] of NodeID\nif dijkstra_result[node_id].nil?\n  return path\nend\nwhile !node_id.nil?\n  Helper.assert(!dijkstra_result[node_id].nil?)\n  path << node_id\n  _cost, prev_node_id = dijkstra_result[node_id].as(Tuple(C, NodeID | ::Nil))\n  node_id = prev_node_id\nend\npath.reverse!\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Graph/SpanningTree","path":"Crystalg/Graph/SpanningTree.html","kind":"module","full_name":"Crystalg::Graph::SpanningTree","name":"SpanningTree","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/spanning_tree/kruskal.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/spanning_tree/kruskal.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Graph/SpanningTree/Kruskal","path":"Crystalg/Graph/SpanningTree/Kruskal.html","kind":"module","full_name":"Crystalg::Graph::SpanningTree::Kruskal(C)","name":"Kruskal","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/graph/spanning_tree/kruskal.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/spanning_tree/kruskal.cr#L5"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"crystalg/Crystalg/Graph/UndirectedGraph","kind":"class","full_name":"Crystalg::Graph::UndirectedGraph(C)","name":"UndirectedGraph"}],"namespace":{"html_id":"crystalg/Crystalg/Graph/SpanningTree","kind":"module","full_name":"Crystalg::Graph::SpanningTree","name":"SpanningTree"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"kruskal:Array(Edge(C))-instance-method","html_id":"kruskal:Array(Edge(C))-instance-method","name":"kruskal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Edge(C))","args_html":" : Array(<a href=\"../../../Crystalg/Graph/Edge.html\">Edge</a>(C))","location":{"filename":"src/crystalg/graph/spanning_tree/kruskal.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/spanning_tree/kruskal.cr#L6"},"def":{"name":"kruskal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Edge(C))","visibility":"Public","body":"union_find = UnionFind.new(@size)\nresult = Array(Edge(C)).new\nedges.sort.each do |edge|\n  if !(union_find.same?(edge.source, edge.target))\n    union_find.unite(edge.source, edge.target)\n    result << edge\n  end\nend\nresult\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Graph/UndirectedGraph","path":"Crystalg/Graph/UndirectedGraph.html","kind":"class","full_name":"Crystalg::Graph::UndirectedGraph(C)","name":"UndirectedGraph","abstract":false,"superclass":{"html_id":"crystalg/Crystalg/Graph/Graph","kind":"class","full_name":"Crystalg::Graph::Graph","name":"Graph"},"ancestors":[{"html_id":"crystalg/Crystalg/Graph/SpanningTree/Kruskal","kind":"module","full_name":"Crystalg::Graph::SpanningTree::Kruskal","name":"Kruskal"},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/Bridges","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::Bridges","name":"Bridges"},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/ArticulationPoints","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::ArticulationPoints","name":"ArticulationPoints"},{"html_id":"crystalg/Crystalg/Graph/Graph","kind":"class","full_name":"Crystalg::Graph::Graph","name":"Graph"},{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L6"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/ArticulationPoints","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::ArticulationPoints","name":"ArticulationPoints"},{"html_id":"crystalg/Crystalg/Graph/ConnectedComponents/Bridges","kind":"module","full_name":"Crystalg::Graph::ConnectedComponents::Bridges","name":"Bridges"},{"html_id":"crystalg/Crystalg/Graph/SpanningTree/Kruskal","kind":"module","full_name":"Crystalg::Graph::SpanningTree::Kruskal","name":"Kruskal"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":"C: type of cost","summary":"<p>C: type of cost</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L9"},"def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(C).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(edge:Edge(C))-instance-method","html_id":"add(edge:Edge(C))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge(C)"}],"args_string":"(edge : Edge(C))","args_html":"(edge : <a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(C))","location":{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":15,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L15"},"def":{"name":"add","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge(C)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[edge.source] << {edge.target, edge.cost}\n@graph[edge.target] << {edge.source, edge.cost}\n"}},{"id":"adjacent_nodes(node_id:NodeID):Array(Tuple(NodeID,C))-instance-method","html_id":"adjacent_nodes(node_id:NodeID):Array(Tuple(NodeID,C))-instance-method","name":"adjacent_nodes","doc":null,"summary":null,"abstract":false,"args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"args_string":"(node_id : NodeID) : Array(Tuple(NodeID, C))","args_html":"(node_id : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>) : Array(Tuple(<a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, C))","location":{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L20"},"def":{"name":"adjacent_nodes","args":[{"name":"node_id","doc":null,"default_value":"","external_name":"node_id","restriction":"NodeID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(NodeID, C))","visibility":"Public","body":"@graph[node_id].map do |e|\n  {e[0], e[1]}\nend"}},{"id":"edges:Array(Edge(C))-instance-method","html_id":"edges:Array(Edge(C))-instance-method","name":"edges","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Edge(C))","args_html":" : Array(<a href=\"../../Crystalg/Graph/Edge.html\">Edge</a>(C))","location":{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":26,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L26"},"def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Edge(C))","visibility":"Public","body":"result = Array(Edge(C)).new\n(0...@size).each do |node_id|\n  (adjacent_nodes(node_id)).each do |target_id, cost|\n    if node_id < target_id\n      result << (Edge(C).new(node_id, target_id, cost))\n    end\n  end\nend\nresult.uniq!\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/graph/undirected_graph.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/undirected_graph.cr#L7"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Graph/WeightedFlowEdge","path":"Crystalg/Graph/WeightedFlowEdge.html","kind":"class","full_name":"Crystalg::Graph::WeightedFlowEdge(T, U)","name":"WeightedFlowEdge","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/graph/edge.cr","line_number":38,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L38"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Graph","kind":"module","full_name":"Crystalg::Graph","name":"Graph"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(source:NodeID,target:NodeID,cost:T,capacity:U)-class-method","html_id":"new(source:NodeID,target:NodeID,cost:T,capacity:U)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"U"}],"args_string":"(source : NodeID, target : NodeID, cost : T, capacity : U)","args_html":"(source : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, target : <a href=\"../../Crystalg/Graph/NodeID.html\">NodeID</a>, cost : T, capacity : U)","location":{"filename":"src/crystalg/graph/edge.cr","line_number":41,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L41"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"NodeID"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"NodeID"},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"},{"name":"capacity","doc":null,"default_value":"","external_name":"capacity","restriction":"U"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedFlowEdge(T, U).allocate\n_.initialize(source, target, cost, capacity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"capacity-instance-method","html_id":"capacity-instance-method","name":"capacity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":39,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L39"},"def":{"name":"capacity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@capacity"}},{"id":"cost-instance-method","html_id":"cost-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":39,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L39"},"def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cost"}},{"id":"source-instance-method","html_id":"source-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":39,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L39"},"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}},{"id":"target-instance-method","html_id":"target-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/graph/edge.cr","line_number":39,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/graph/edge.cr#L39"},"def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@target"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/NumberTheory","path":"Crystalg/NumberTheory.html","kind":"module","full_name":"Crystalg::NumberTheory","name":"NumberTheory","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/number_theory/carmichael.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/carmichael.cr#L1"},{"filename":"src/crystalg/number_theory/euclid.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euclid.cr#L1"},{"filename":"src/crystalg/number_theory/euler_phi.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euler_phi.cr#L1"},{"filename":"src/crystalg/number_theory/mobius.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mobius.cr#L1"},{"filename":"src/crystalg/number_theory/mod.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mod.cr#L1"},{"filename":"src/crystalg/number_theory/prime_number.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/prime_number.cr#L1"},{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"carmichael(n)-instance-method","html_id":"carmichael(n)-instance-method","name":"carmichael","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/carmichael.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/carmichael.cr#L2"},"def":{"name":"carmichael","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = 1\nif (n % 8) == 0\n  n = n / 2\nend\n(2..n).each do |d|\n  if (n % d) == 0\n    y = d - 1\n    n = n / d\n    while (n % d) == 0\n      n = n / d\n      y = y * d\n    end\n    result = lcm(result, y)\n  end\nend\nresult\n"}},{"id":"divisor(n)-instance-method","html_id":"divisor(n)-instance-method","name":"divisor","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/prime_number.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/prime_number.cr#L2"},"def":{"name":"divisor","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Array(Int32).new\n(1..(Math.sqrt(n)).to_i).each do |i|\n  if (  (n % i) == 0)\n    result << i\n    if i != (n / i)\n      result << (n / i).to_i\n    end\n  end\nend\nresult\n"}},{"id":"extgcd(a,b)-instance-method","html_id":"extgcd(a,b)-instance-method","name":"extgcd","doc":"returns {gcd(a,b), x, y} such that gcd(a,b) == a*x + b*y","summary":"<p>returns {gcd(a,b), x, y} such that gcd(a,b) == a<em>x + b</em>y</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/crystalg/number_theory/euclid.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euclid.cr#L14"},"def":{"name":"extgcd","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x, y, u, v = 0, 1, 1, 0\nwhile a != 0\n  q = (b / a).to_i\n  x, u = u, x - (q * u)\n  y, v = v, y - (q * v)\n  a, b = b - (q * a), a\nend\n{b, x, y}\n"}},{"id":"gcd(a,b)-instance-method","html_id":"gcd(a,b)-instance-method","name":"gcd","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/crystalg/number_theory/euclid.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euclid.cr#L2"},"def":{"name":"gcd","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while b != 0\n  a, b = b, (a % b).to_i\nend\na.abs\n"}},{"id":"lcm(a,b)-instance-method","html_id":"lcm(a,b)-instance-method","name":"lcm","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/crystalg/number_theory/euclid.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euclid.cr#L9"},"def":{"name":"lcm","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((a / (gcd(a, b))) * b).abs"}},{"id":"mobius(n)-instance-method","html_id":"mobius(n)-instance-method","name":"mobius","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/mobius.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mobius.cr#L2"},"def":{"name":"mobius","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = 1\n(2..n).each do |d|\n  if (n % (d * d)) == 0\n    return 0\n  end\n  if (n % d) == 0\n    n = n / d\n    result = result * -1\n  end\nend\nresult\n"}},{"id":"phi(n)-instance-method","html_id":"phi(n)-instance-method","name":"phi","doc":"count the totatives of n that is the positive integers\nless than or equal to n that are relatively prime to n","summary":"<p>count the totatives of n that is the positive integers less than or equal to n that are relatively prime to n</p>","abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/euler_phi.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euler_phi.cr#L4"},"def":{"name":"phi","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = n\ni = 2\nwhile (i * i) <= n\n  if (  (n % i) == 0)\n    while (n % i) == 0\n      n = n / i\n    end\n    res = res - (res / i)\n  end\n  i = i + 1\nend\nif n > 1\n  res = res - (res / n)\nend\nres\n"}},{"id":"phi_list(n)-instance-method","html_id":"phi_list(n)-instance-method","name":"phi_list","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/euler_phi.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/euler_phi.cr#L20"},"def":{"name":"phi_list","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = (0..n).to_a\n(1..n).each do |i|\n  j = 2 * i\n  while j <= n\n    __temp_55 = j\n    result[__temp_55] = result[__temp_55] - result[i]\n    j = j + i\n  end\nend\nresult\n"}},{"id":"prime?(n)-instance-method","html_id":"prime?(n)-instance-method","name":"prime?","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/prime_number.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/prime_number.cr#L13"},"def":{"name":"prime?","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"i = 2\nwhile (i * i) <= n\n  if (n % i) == 0\n    return false\n  end\n  i = i + 1\nend\nn != 1\n"}},{"id":"prime_factorize(n)-instance-method","html_id":"prime_factorize(n)-instance-method","name":"prime_factorize","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/prime_number.cr","line_number":22,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/prime_number.cr#L22"},"def":{"name":"prime_factorize","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Hash(Int32, Int32).new\n(2..(Math.sqrt(n)).to_i).each do |i|\n  count = 0\n  while (n % i) == 0\n    count = count + 1\n    n = (n / i).to_i\n  end\n  if count > 0\n    result[i] = count\n  end\nend\nif n != 1\n  result[n] = 1\nend\nresult\n"}},{"id":"sieve_of_eratosthenes(n)-instance-method","html_id":"sieve_of_eratosthenes(n)-instance-method","name":"sieve_of_eratosthenes","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","args_html":"(n)","location":{"filename":"src/crystalg/number_theory/prime_number.cr","line_number":37,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/prime_number.cr#L37"},"def":{"name":"sieve_of_eratosthenes","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Array(Bool).new(n + 1, true)\nresult[0] = result[1] = false\n(2..(Math.sqrt(n)).to_i).each do |i|\n  if (  result[i] == true)\n    (((i * i)..n).step(i)).each do |i|\n      result[j] = false\n    end\n  end\nend\nresult\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/NumberTheory/Fraction","path":"Crystalg/NumberTheory/Fraction.html","kind":"struct","full_name":"Crystalg::NumberTheory::Fraction","name":"Fraction","abstract":false,"superclass":{"html_id":"crystalg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"crystalg/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"crystalg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/NumberTheory","kind":"module","full_name":"Crystalg::NumberTheory","name":"NumberTheory"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(numerator,denominator)-class-method","html_id":"new(numerator,denominator)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"numerator","doc":null,"default_value":"","external_name":"numerator","restriction":""},{"name":"denominator","doc":null,"default_value":"","external_name":"denominator","restriction":""}],"args_string":"(numerator, denominator)","args_html":"(numerator, denominator)","location":{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L6"},"def":{"name":"new","args":[{"name":"numerator","doc":null,"default_value":"","external_name":"numerator","restriction":""},{"name":"denominator","doc":null,"default_value":"","external_name":"denominator","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(numerator, denominator)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"denominator:Int32-instance-method","html_id":"denominator:Int32-instance-method","name":"denominator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L4"},"def":{"name":"denominator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@denominator"}},{"id":"numerator:Int32-instance-method","html_id":"numerator:Int32-instance-method","name":"numerator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L3"},"def":{"name":"numerator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@numerator"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/NumberTheory/Mod","path":"Crystalg/NumberTheory/Mod.html","kind":"module","full_name":"Crystalg::NumberTheory::Mod","name":"Mod","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/number_theory/mod.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mod.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/NumberTheory","kind":"module","full_name":"Crystalg::NumberTheory","name":"NumberTheory"},"doc":null,"summary":null,"class_methods":[{"id":"inverse(a,m)-class-method","html_id":"inverse(a,m)-class-method","name":"inverse","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"args_string":"(a, m)","args_html":"(a, m)","location":{"filename":"src/crystalg/number_theory/mod.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mod.cr#L7"},"def":{"name":"inverse","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if m <= 0\n  raise(\"precondition: self > 0\")\nend\nif (gcd(a, m)) != 1\n  raise(\"precondition: gcd(self, m) == 1\")\nend\n(extgcd(a, m)).x.mod(m)\n"}},{"id":"mod(a,m)-class-method","html_id":"mod(a,m)-class-method","name":"mod","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"args_string":"(a, m)","args_html":"(a, m)","location":{"filename":"src/crystalg/number_theory/mod.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mod.cr#L3"},"def":{"name":"mod","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(a = a % m) >= 0 ? a : a + m"}},{"id":"pow(y,exp,mod)-class-method","html_id":"pow(y,exp,mod)-class-method","name":"pow","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"args_string":"(y, exp, mod)","args_html":"(y, exp, mod)","location":{"filename":"src/crystalg/number_theory/mod.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/mod.cr#L13"},"def":{"name":"pow","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = 1\nwhile 0 < exp\n  if (exp & 1) != 0\n    result = (result * y) % mod\n  end\n  y = (y &* y) % mod\n  exp = exp >> 1\nend\nresult\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/NumberTheory/SternBrocotTree","path":"Crystalg/NumberTheory/SternBrocotTree.html","kind":"class","full_name":"Crystalg::NumberTheory::SternBrocotTree","name":"SternBrocotTree","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L10"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/NumberTheory","kind":"module","full_name":"Crystalg::NumberTheory","name":"NumberTheory"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(height)-instance-method","html_id":"run(height)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""}],"args_string":"(height)","args_html":"(height)","location":{"filename":"src/crystalg/number_theory/stern_brocot_tree.cr","line_number":35,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/number_theory/stern_brocot_tree.cr#L35"},"def":{"name":"run","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"left, right = Fraction.new(0, 1), Fraction.new(1, 0)\nresult = Array(Fraction).new\nrec(height, Node.new(left, right), result)\nresult\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Random","path":"Crystalg/Random.html","kind":"module","full_name":"Crystalg::Random","name":"Random","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/random/xor128.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/random/xor128.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Random/Xor128","path":"Crystalg/Random/Xor128.html","kind":"class","full_name":"Crystalg::Random::Xor128","name":"Xor128","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/random/xor128.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/random/xor128.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Random","kind":"module","full_name":"Crystalg::Random","name":"Random"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(s:UInt64)-class-method","html_id":"new(s:UInt64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"UInt64"}],"args_string":"(s : UInt64)","args_html":"(s : UInt64)","location":{"filename":"src/crystalg/random/xor128.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/random/xor128.cr#L5"},"def":{"name":"new","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(s)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get:UInt64-instance-method","html_id":"get:UInt64-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/crystalg/random/xor128.cr","line_number":11,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/random/xor128.cr#L11"},"def":{"name":"get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"t = (@seed[0] ^ (@seed[0] << 11))\n@seed[0], @seed[1], @seed[2] = @seed[1], @seed[2], @seed[3]\n@seed[3] = (@seed[3] ^ (@seed[3] >> 19)) ^ (t ^ (t >> 8))\n"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Strings","path":"Crystalg/Strings.html","kind":"module","full_name":"Crystalg::Strings","name":"Strings","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L1"},{"filename":"src/crystalg/strings/baker_bird.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/baker_bird.cr#L3"},{"filename":"src/crystalg/strings/kmp.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/kmp.cr#L1"},{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L1"},{"filename":"src/crystalg/strings/suffix_array.cr","line_number":1,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L1"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg","kind":"module","full_name":"Crystalg","name":"Crystalg"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"kmp(target:String,pattern:String):Array(Int32)-instance-method","html_id":"kmp(target:String,pattern:String):Array(Int32)-instance-method","name":"kmp","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"}],"args_string":"(target : String, pattern : String) : Array(Int32)","args_html":"(target : String, pattern : String) : Array(Int32)","location":{"filename":"src/crystalg/strings/kmp.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/kmp.cr#L2"},"def":{"name":"kmp","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"},{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"n = Array(Int32).new(pattern.size + 1, 0)\nj, n[0] = -1, -1\n(0...pattern.size).each do |i|\n  while j >= 0 && (pattern[i] != pattern[j])\n    j = n[j]\n  end\n  j = j + 1\n  n[i + 1] = j\nend\nresult = Array(Int32).new\nj = 0\n(0...target.size).each do |i|\n  while j >= 0 && (target[i] != pattern[j])\n    j = n[j]\n  end\n  j = j + 1\n  if j == pattern.size\n    result << ((i - pattern.size) + 1)\n    j = n[j]\n  end\nend\nresult\n"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Strings/AhoCorasick","path":"Crystalg/Strings/AhoCorasick.html","kind":"class","full_name":"Crystalg::Strings::AhoCorasick","name":"AhoCorasick","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ROOT","name":"ROOT","value":"0","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Strings","kind":"module","full_name":"Crystalg::Strings","name":"Strings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(max_node)-class-method","html_id":"new(max_node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"max_node","doc":null,"default_value":"","external_name":"max_node","restriction":""}],"args_string":"(max_node)","args_html":"(max_node)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":23,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L23"},"def":{"name":"new","args":[{"name":"max_node","doc":null,"default_value":"","external_name":"max_node","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(max_node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(str)-instance-method","html_id":"add(str)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"args_string":"(str)","args_html":"(str)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":30,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L30"},"def":{"name":"add","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cur = ROOT\nstr.each_char do |ch|\n  c = ch.bytes.first\n  if (@nodes[cur].@children)[c] == -1\n    @size = @size + 1\n    @nodes[@size].parent = cur\n    @nodes[@size].char = ch\n    (@nodes[cur].@children)[c] = @size\n  end\n  cur = (@nodes[cur].@children)[c]\nend\n@nodes[cur].is_leaf = true\n"}},{"id":"contain?(target:String)-instance-method","html_id":"contain?(target:String)-instance-method","name":"contain?","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"args_string":"(target : String)","args_html":"(target : String)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":70,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L70"},"def":{"name":"contain?","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cur = ROOT\ntarget.each_char do |ch|\n  cur = (@nodes[cur].@children)[ch.bytes.first]\n  if cur < 0\n    return false\n  end\nend\n@nodes[cur].is_leaf\n"}},{"id":"failure(id)-instance-method","html_id":"failure(id)-instance-method","name":"failure","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"args_string":"(id)","args_html":"(id)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":45,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L45"},"def":{"name":"failure","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @nodes[id].link == -1\n  if @nodes[id].parent == ROOT\n    @nodes[id].link = ROOT\n  else\n    @nodes[id].link = goto(failure(@nodes[id].parent), @nodes[id].char)\n  end\nend\n@nodes[id].link\n"}},{"id":"goto(id,char)-instance-method","html_id":"goto(id,char)-instance-method","name":"goto","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":""}],"args_string":"(id, char)","args_html":"(id, char)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":56,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L56"},"def":{"name":"goto","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"c = char.bytes.first\nif (@nodes[id].@next)[c] == -1\n  if (@nodes[id].@children)[c] != -1\n    (@nodes[id].@next)[c] = (@nodes[id].@children)[c]\n  else\n    if id == ROOT\n      (@nodes[id].@next)[c] = ROOT\n    else\n      (@nodes[id].@next)[c] = goto(failure(id), char)\n    end\n  end\nend\n(@nodes[id].@next)[c]\n"}},{"id":"match_prefixes(target:String):Array(String)-instance-method","html_id":"match_prefixes(target:String):Array(String)-instance-method","name":"match_prefixes","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"args_string":"(target : String) : Array(String)","args_html":"(target : String) : Array(String)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":85,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L85"},"def":{"name":"match_prefixes","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"cur = ROOT\ntarget.each_char do |ch|\n  cur = (@nodes[cur].@children)[ch.bytes.first]\n  if cur < 0\n    return [] of String\n  end\nend\nresult = [] of String\nque = [{cur, target}]\nloop do\n  if que.empty?\n    return result\n  end\n  cur, acc = que.shift\n  now = @nodes[cur]\n  if now.is_leaf\n    result << acc\n  end\n  (now.@children).each do |child|\n    if child < 0\n      next\n    end\n    next_char = @nodes[child].char\n    que << {child, acc + next_char}\n  end\nend\n"}},{"id":"match_suffix?(target:String)-instance-method","html_id":"match_suffix?(target:String)-instance-method","name":"match_suffix?","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"args_string":"(target : String)","args_html":"(target : String)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":79,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L79"},"def":{"name":"match_suffix?","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cur = ROOT\ntarget.each_char do |ch|\n  cur = goto(cur, ch)\nend\n@nodes[cur].is_leaf\n"}},{"id":"nodes:Array(Node)-instance-method","html_id":"nodes:Array(Node)-instance-method","name":"nodes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Node)","args_html":" : Array(<a href=\"../../Crystalg/Strings/AhoCorasick/Node.html\">Node</a>)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L20"},"def":{"name":"nodes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Node)","visibility":"Public","body":"@nodes"}},{"id":"nodes=(nodes:Array(Node))-instance-method","html_id":"nodes=(nodes:Array(Node))-instance-method","name":"nodes=","doc":null,"summary":null,"abstract":false,"args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(Node)"}],"args_string":"(nodes : Array(Node))","args_html":"(nodes : Array(<a href=\"../../Crystalg/Strings/AhoCorasick/Node.html\">Node</a>))","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L20"},"def":{"name":"nodes=","args":[{"name":"nodes","doc":null,"default_value":"","external_name":"nodes","restriction":"Array(Node)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@nodes = nodes"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L19"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"size=(size:Int32)-instance-method","html_id":"size=(size:Int32)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","args_html":"(size : Int32)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":19,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L19"},"def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}}],"macros":[],"types":[{"html_id":"crystalg/Crystalg/Strings/AhoCorasick/Node","path":"Crystalg/Strings/AhoCorasick/Node.html","kind":"class","full_name":"Crystalg::Strings::AhoCorasick::Node","name":"Node","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Strings/AhoCorasick","kind":"class","full_name":"Crystalg::Strings::AhoCorasick","name":"AhoCorasick"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":9,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L9"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"char:Char-instance-method","html_id":"char:Char-instance-method","name":"char","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Char","args_html":" : Char","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L6"},"def":{"name":"char","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Char","visibility":"Public","body":"@char"}},{"id":"char=(char:Char)-instance-method","html_id":"char=(char:Char)-instance-method","name":"char=","doc":null,"summary":null,"abstract":false,"args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"args_string":"(char : Char)","args_html":"(char : Char)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L6"},"def":{"name":"char=","args":[{"name":"char","doc":null,"default_value":"","external_name":"char","restriction":"Char"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char = char"}},{"id":"is_leaf:Bool-instance-method","html_id":"is_leaf:Bool-instance-method","name":"is_leaf","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L7"},"def":{"name":"is_leaf","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@is_leaf"}},{"id":"is_leaf=(is_leaf:Bool)-instance-method","html_id":"is_leaf=(is_leaf:Bool)-instance-method","name":"is_leaf=","doc":null,"summary":null,"abstract":false,"args":[{"name":"is_leaf","doc":null,"default_value":"","external_name":"is_leaf","restriction":"Bool"}],"args_string":"(is_leaf : Bool)","args_html":"(is_leaf : Bool)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":7,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L7"},"def":{"name":"is_leaf=","args":[{"name":"is_leaf","doc":null,"default_value":"","external_name":"is_leaf","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@is_leaf = is_leaf"}},{"id":"link:Int32-instance-method","html_id":"link:Int32-instance-method","name":"link","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L5"},"def":{"name":"link","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@link"}},{"id":"link=(link:Int32)-instance-method","html_id":"link=(link:Int32)-instance-method","name":"link=","doc":null,"summary":null,"abstract":false,"args":[{"name":"link","doc":null,"default_value":"","external_name":"link","restriction":"Int32"}],"args_string":"(link : Int32)","args_html":"(link : Int32)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L5"},"def":{"name":"link=","args":[{"name":"link","doc":null,"default_value":"","external_name":"link","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@link = link"}},{"id":"parent:Int32-instance-method","html_id":"parent:Int32-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L4"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@parent"}},{"id":"parent=(parent:Int32)-instance-method","html_id":"parent=(parent:Int32)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"Int32"}],"args_string":"(parent : Int32)","args_html":"(parent : Int32)","location":{"filename":"src/crystalg/strings/aho_corasick.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/aho_corasick.cr#L4"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent = parent"}}],"macros":[],"types":[]}]},{"html_id":"crystalg/Crystalg/Strings/BakerBird","path":"Crystalg/Strings/BakerBird.html","kind":"class","full_name":"Crystalg::Strings::BakerBird","name":"BakerBird","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/strings/baker_bird.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/baker_bird.cr#L4"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Strings","kind":"module","full_name":"Crystalg::Strings","name":"Strings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(text:Array(String))-class-method","html_id":"new(text:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"Array(String)"}],"args_string":"(text : Array(String))","args_html":"(text : Array(String))","location":{"filename":"src/crystalg/strings/baker_bird.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/baker_bird.cr#L5"},"def":{"name":"new","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"search(pattern)-instance-method","html_id":"search(pattern)-instance-method","name":"search","doc":null,"summary":null,"abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""}],"args_string":"(pattern)","args_html":"(pattern)","location":{"filename":"src/crystalg/strings/baker_bird.cr","line_number":10,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/baker_bird.cr#L10"},"def":{"name":"search","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pattern.each do |row|\n  @aho_corasick.add(row)\nend\nacc = Array(Int32).new\npattern.each do |str|\n  node_id = 0\n  str.each_char do |char|\n    node_id = @aho_corasick.goto(node_id, char)\n    if (@aho_corasick.@nodes)[node_id].is_leaf\n      acc << node_id\n    end\n  end\nend\ntil = @text[0].size\ntd = Array(Array(Int32)).new(til) do\n  Array(Int32).new(@text.size, 0)\nend\n@text.each_with_index do |row, i|\n  node_id = 0\n  row.each_char_with_index do |e, j|\n    node_id = @aho_corasick.goto(node_id, @text[i][j])\n    td[(til - j) - 1][i] = node_id\n  end\nend\nresult = Array(Tuple(Int32, Int32)).new\na = Array(Int32).new((acc.size + @text.size) + 2, -1)\nsl = (acc.size + @text.size) + 1\n(0...til).each do |i|\n  s = acc.dup\n  s << -1\n  (0...@text.size).each do |j|\n    s << td[i][j]\n  end\n  j = -1\n  (0...sl).each do |k|\n    while j >= 0 && (s[k] != s[j])\n      j = a[j]\n    end\n    j = j + 1\n    a[k + 1] = j\n  end\n  ((acc.size + 1)..sl).each do |k|\n    if a[k] == acc.size\n      result << {(k - (acc.size * 2)) - 1, (til - i) - pattern[0].size}\n    end\n  end\nend\nresult\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Strings/RollingHash","path":"Crystalg/Strings/RollingHash.html","kind":"class","full_name":"Crystalg::Strings::RollingHash","name":"RollingHash","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Strings","kind":"module","full_name":"Crystalg::Strings","name":"Strings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(str:String)-class-method","html_id":"new(str:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","args_html":"(str : String)","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":5,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L5"},"def":{"name":"new","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(str)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count(t)-instance-method","html_id":"count(t)-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":""}],"args_string":"(t)","args_html":"(t)","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L24"},"def":{"name":"count","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"w = t.size\nresult = 0\nif w < @str.size\n  h = hash(t)\n  result = result &+ (0..(@str.size - w)).count do |i|\n    (hash(i, i + w)) == h\n  end\nend\nresult\n"}},{"id":"get_suffix_array-instance-method","html_id":"get_suffix_array-instance-method","name":"get_suffix_array","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":61,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L61"},"def":{"name":"get_suffix_array","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"suffix_array = (0...(@str.size + 1)).to_a\nsuffix_array.sort do |a, b|\n  compare(a, b)\nend\n"}},{"id":"hash(b,e)-instance-method","html_id":"hash(b,e)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"args_string":"(b, e)","args_html":"(b, e)","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":20,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L20"},"def":{"name":"hash","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"e","doc":null,"default_value":"","external_name":"e","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@phash[e] &- (@phash[b] &* @pow[e - b])"}},{"id":"hash(t)-instance-method","html_id":"hash(t)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":""}],"args_string":"(t)","args_html":"(t)","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":16,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L16"},"def":{"name":"hash","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t.chars.reduce(0_i64) do |acc, ch|\n  ch.bytes.first.to_i64 &+ (acc &* PRIME)\nend"}},{"id":"lcp(i,j)-instance-method","html_id":"lcp(i,j)-instance-method","name":"lcp","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""}],"args_string":"(i, j)","args_html":"(i, j)","location":{"filename":"src/crystalg/strings/rolling_hash.cr","line_number":34,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/rolling_hash.cr#L34"},"def":{"name":"lcp","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"l = 0\nr = (@str.size - (Math.max(i, j))) + 1\nwhile (l + 1) < r\n  m = (l + r) >> 1\n  if (hash(i, i + m)) == (hash(j, j + m))\n    l = m\n  else\n    r = m\n  end\nend\nl\n"}}],"macros":[],"types":[]},{"html_id":"crystalg/Crystalg/Strings/SuffixArray","path":"Crystalg/Strings/SuffixArray.html","kind":"class","full_name":"Crystalg::Strings::SuffixArray","name":"SuffixArray","abstract":false,"superclass":{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crystalg/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/strings/suffix_array.cr","line_number":2,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L2"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crystalg/Crystalg/Strings","kind":"module","full_name":"Crystalg::Strings","name":"Strings"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(target:String)-class-method","html_id":"new(target:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"args_string":"(target : String)","args_html":"(target : String)","location":{"filename":"src/crystalg/strings/suffix_array.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L6"},"def":{"name":"new","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(target)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"construct-instance-method","html_id":"construct-instance-method","name":"construct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/strings/suffix_array.cr","line_number":13,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L13"},"def":{"name":"construct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = @target.size\nlen = 1\nwhile len < n\n  tmp = Array(Int64).new(n, 0_i64)\n  (0...n).each do |i|\n    tmp[i] = (@rank[i].to_i64 << 32) + ((i + len) < n ? @rank[i + len] + 1 : 0)\n  end\n  @suffix_array = @suffix_array.sort do |a, b|\n    tmp[a] <=> tmp[b]\n  end\n  (0...n).each do |i|\n    j = @suffix_array[i]\n    k = @suffix_array[i - 1]\n    @rank[j] = if i > 0 && (tmp[k] == tmp[j])\n      @rank[k]\n    else\n      i\n    end\n  end\n  len = len * 2\nend\nh = 0\n(0...n).each do |i|\n  if (@rank[i] + 1) < n\n    j = @suffix_array[@rank[i] + 1]\n    while ((Math.max(i, j)) + h) < n && (@target[i + h] == @target[j + h])\n      h = h + 1\n    end\n    @lcp[@rank[i]] = h\n    if h > 0\n      h = h - 1\n    end\n  end\nend\n"}},{"id":"rank:Array(Int32)-instance-method","html_id":"rank:Array(Int32)-instance-method","name":"rank","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/crystalg/strings/suffix_array.cr","line_number":4,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L4"},"def":{"name":"rank","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@rank"}},{"id":"suffix_array:Array(Int32)-instance-method","html_id":"suffix_array:Array(Int32)-instance-method","name":"suffix_array","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/crystalg/strings/suffix_array.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/strings/suffix_array.cr#L3"},"def":{"name":"suffix_array","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@suffix_array"}}],"macros":[],"types":[]}]}]},{"html_id":"crystalg/Float","path":"Float.html","kind":"struct","full_name":"Float","name":"Float","abstract":true,"superclass":{"html_id":"crystalg/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"crystalg/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"crystalg/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crystalg/geometry/extensions.cr","line_number":3,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L3"}],"repository_name":"crystalg","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"crystalg/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Float is the base type of all floating point numbers.\n\nThere are two floating point types, `Float32` and `Float64`,\nwhich correspond to the [binary32](http://en.wikipedia.org/wiki/Single_precision_floating-point_format)\nand [binary64](http://en.wikipedia.org/wiki/Double_precision_floating-point_format)\ntypes defined by IEEE.\n\nA floating point literal is an optional `+` or `-` sign, followed by\na sequence of numbers or underscores, followed by a dot,\nfollowed by numbers or underscores, followed by an optional exponent suffix,\nfollowed by an optional type suffix. If no suffix is present, the literal's type is `Float64`.\n\n```\n1.0     # Float64\n1.0_f32 # Float32\n1_f32   # Float32\n\n1e10   # Float64\n1.5e10 # Float64\n1.5e-7 # Float64\n\n+1.3 # Float64\n-0.5 # Float64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000.111_111 # better than 1000000.111111\n```","summary":"<p>Float is the base type of all floating point numbers.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"+(other:Float)-instance-method","html_id":"+(other:Float)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"args_string":"(other : Float)","args_html":"(other : <a href=\"Float.html\">Float</a>)","location":{"filename":"src/crystalg/geometry/extensions.cr","line_number":6,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L6"},"def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (self + other).abs < (EPS * (self.abs + other.abs))\n  0.as(Float)\nelse\n  self + other\nend"}},{"id":"(other:Float)-instance-method","html_id":"(other:Float)-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greater than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"args_string":"(other : Float)","args_html":"(other : <a href=\"Float.html\">Float</a>)","location":{"filename":"src/crystalg/geometry/extensions.cr","line_number":14,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L14"},"def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (self < (other - EPS))\n  -1\nelse\n  if (  self > (other + EPS))\n    1\n  else\n    0\n  end\nend"}},{"id":"===(other:Float)-instance-method","html_id":"===(other:Float)-instance-method","name":"===","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"args_string":"(other : Float)","args_html":"(other : <a href=\"Float.html\">Float</a>)","location":{"filename":"src/crystalg/geometry/extensions.cr","line_number":24,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L24"},"def":{"name":"===","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self <=> other) == 0"}},{"id":"sign:Int-instance-method","html_id":"sign:Int-instance-method","name":"sign","doc":"Returns the sign of this number as an `Int32`.\n* `-1` if this number is negative\n* `0` if this number is zero\n* `1` if this number is positive\n\n```\n123.sign # => 1\n0.sign   # => 0\n-42.sign # => -1\n```","summary":"<p>Returns the sign of this number as an <code>Int32</code>.</p>","abstract":false,"args":[],"args_string":" : Int","args_html":" : Int","location":{"filename":"src/crystalg/geometry/extensions.cr","line_number":28,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L28"},"def":{"name":"sign","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"self <=> (0.as(Float))"}},{"id":"sqrt-instance-method","html_id":"sqrt-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crystalg/geometry/extensions.cr","line_number":32,"url":"https://github.com/tobyapi/crystalg/blob/03f2854581aa280f87c2fb78f4f7c9c786869f3a/src/crystalg/geometry/extensions.cr#L32"},"def":{"name":"sqrt","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sqrt(Math.max(self, 0.0))"}}],"macros":[],"types":[]}]}}